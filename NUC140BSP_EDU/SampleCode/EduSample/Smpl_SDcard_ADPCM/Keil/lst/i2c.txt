; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\i2c.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\i2c.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\ -I..\ff8\src\ -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\Device\Nuvoton\NUC1xx\Include -I..\..\..\..\Library\Device\Nuvoton\NUC1xx\Source -I..\..\..\..\Library\ -I..\..\..\..\Library\NUC1xx\Include -I..\..\..\..\Library\NUC1xx-LB_002\Include -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Nuvoton\NUC1xx -D__UVISION_VERSION=524 --omf_browse=.\obj\i2c.crf ..\..\..\..\Library\NUC1xx\Source\I2C.c]
                          THUMB

                          AREA ||i.DrvI2C_ClearIntFlag||, CODE, READONLY, ALIGN=2

                  DrvI2C_ClearIntFlag PROC
;;;252    /*---------------------------------------------------------------------------------------------------------*/
;;;253    void DrvI2C_ClearIntFlag(E_I2C_PORT port)
000000  2800              CMP      r0,#0
;;;254    {
;;;255        if (port)
000002  d007              BEQ      |L1.20|
;;;256        { 
;;;257            I2C1->I2CON.SI = 1;
000004  4907              LDR      r1,|L1.36|
000006  6809              LDR      r1,[r1,#0]
000008  2208              MOVS     r2,#8
00000a  4391              BICS     r1,r1,r2
00000c  3108              ADDS     r1,r1,#8
00000e  4a05              LDR      r2,|L1.36|
000010  6011              STR      r1,[r2,#0]
000012  e006              B        |L1.34|
                  |L1.20|
;;;258        }   
;;;259        else
;;;260        {
;;;261            I2C0->I2CON.SI = 1;   
000014  4904              LDR      r1,|L1.40|
000016  6809              LDR      r1,[r1,#0]
000018  2208              MOVS     r2,#8
00001a  4391              BICS     r1,r1,r2
00001c  3108              ADDS     r1,r1,#8
00001e  4a02              LDR      r2,|L1.40|
000020  6011              STR      r1,[r2,#0]
                  |L1.34|
;;;262        }           
;;;263    }
000022  4770              BX       lr
;;;264    
                          ENDP

                  |L1.36|
                          DCD      0x40120000
                  |L1.40|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_ClearTimeoutFlag||, CODE, READONLY, ALIGN=2

                  DrvI2C_ClearTimeoutFlag PROC
;;;275    /*---------------------------------------------------------------------------------------------------------*/
;;;276    void DrvI2C_ClearTimeoutFlag(E_I2C_PORT port)
000000  2800              CMP      r0,#0
;;;277    {
;;;278        if (port)
000002  d007              BEQ      |L2.20|
;;;279        { 
;;;280            I2C1->I2CTOC.TIF = 1;
000004  4907              LDR      r1,|L2.36|
000006  6949              LDR      r1,[r1,#0x14]
000008  0849              LSRS     r1,r1,#1
00000a  0049              LSLS     r1,r1,#1
00000c  1c49              ADDS     r1,r1,#1
00000e  4a05              LDR      r2,|L2.36|
000010  6151              STR      r1,[r2,#0x14]
000012  e006              B        |L2.34|
                  |L2.20|
;;;281        }   
;;;282        else
;;;283        {
;;;284            I2C0->I2CTOC.TIF = 1;  
000014  4904              LDR      r1,|L2.40|
000016  6949              LDR      r1,[r1,#0x14]
000018  0849              LSRS     r1,r1,#1
00001a  0049              LSLS     r1,r1,#1
00001c  1c49              ADDS     r1,r1,#1
00001e  4a02              LDR      r2,|L2.40|
000020  6151              STR      r1,[r2,#0x14]
                  |L2.34|
;;;285        }           
;;;286    }
000022  4770              BX       lr
;;;287    
                          ENDP

                  |L2.36|
                          DCD      0x40120000
                  |L2.40|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_Close||, CODE, READONLY, ALIGN=2

                  DrvI2C_Close PROC
;;;365    /*---------------------------------------------------------------------------------------------------------*/
;;;366    int32_t DrvI2C_Close(E_I2C_PORT port)
000000  4601              MOV      r1,r0
;;;367    {
;;;368        if (port)
000002  2900              CMP      r1,#0
000004  d01e              BEQ      |L3.68|
;;;369        {
;;;370            I2C1->I2CON.ENS1 = 0;
000006  481f              LDR      r0,|L3.132|
000008  6800              LDR      r0,[r0,#0]
00000a  2240              MOVS     r2,#0x40
00000c  4390              BICS     r0,r0,r2
00000e  4a1d              LDR      r2,|L3.132|
000010  6010              STR      r0,[r2,#0]
;;;371            SYS->IPRSTC2.I2C1_RST = 1;
000012  2005              MOVS     r0,#5
000014  0700              LSLS     r0,r0,#28
000016  68c0              LDR      r0,[r0,#0xc]
000018  1552              ASRS     r2,r2,#21
00001a  4390              BICS     r0,r0,r2
00001c  1880              ADDS     r0,r0,r2
00001e  2205              MOVS     r2,#5
000020  0712              LSLS     r2,r2,#28
000022  60d0              STR      r0,[r2,#0xc]
;;;372            SYS->IPRSTC2.I2C1_RST = 0;
000024  4610              MOV      r0,r2
000026  68c0              LDR      r0,[r0,#0xc]
000028  2201              MOVS     r2,#1
00002a  0252              LSLS     r2,r2,#9
00002c  4390              BICS     r0,r0,r2
00002e  2205              MOVS     r2,#5
000030  0712              LSLS     r2,r2,#28
000032  60d0              STR      r0,[r2,#0xc]
;;;373            SYSCLK->APBCLK.I2C1_EN = 0;
000034  4814              LDR      r0,|L3.136|
000036  6880              LDR      r0,[r0,#8]
000038  2201              MOVS     r2,#1
00003a  0252              LSLS     r2,r2,#9
00003c  4390              BICS     r0,r0,r2
00003e  4a12              LDR      r2,|L3.136|
000040  6090              STR      r0,[r2,#8]
000042  e01d              B        |L3.128|
                  |L3.68|
;;;374        }
;;;375        else
;;;376        {
;;;377            I2C0->I2CON.ENS1 = 0;
000044  4811              LDR      r0,|L3.140|
000046  6800              LDR      r0,[r0,#0]
000048  2240              MOVS     r2,#0x40
00004a  4390              BICS     r0,r0,r2
00004c  4a0f              LDR      r2,|L3.140|
00004e  6010              STR      r0,[r2,#0]
;;;378            SYS->IPRSTC2.I2C0_RST = 1;
000050  2005              MOVS     r0,#5
000052  0700              LSLS     r0,r0,#28
000054  68c0              LDR      r0,[r0,#0xc]
000056  1592              ASRS     r2,r2,#22
000058  4390              BICS     r0,r0,r2
00005a  1880              ADDS     r0,r0,r2
00005c  2205              MOVS     r2,#5
00005e  0712              LSLS     r2,r2,#28
000060  60d0              STR      r0,[r2,#0xc]
;;;379            SYS->IPRSTC2.I2C0_RST = 0;
000062  4610              MOV      r0,r2
000064  68c0              LDR      r0,[r0,#0xc]
000066  22ff              MOVS     r2,#0xff
000068  3201              ADDS     r2,#1
00006a  4390              BICS     r0,r0,r2
00006c  2205              MOVS     r2,#5
00006e  0712              LSLS     r2,r2,#28
000070  60d0              STR      r0,[r2,#0xc]
;;;380            SYSCLK->APBCLK.I2C0_EN = 0;
000072  4805              LDR      r0,|L3.136|
000074  6880              LDR      r0,[r0,#8]
000076  22ff              MOVS     r2,#0xff
000078  3201              ADDS     r2,#1
00007a  4390              BICS     r0,r0,r2
00007c  4a02              LDR      r2,|L3.136|
00007e  6090              STR      r0,[r2,#8]
                  |L3.128|
;;;381        }
;;;382        
;;;383        return 0;
000080  2000              MOVS     r0,#0
;;;384    }
000082  4770              BX       lr
;;;385    
                          ENDP

                  |L3.132|
                          DCD      0x40120000
                  |L3.136|
                          DCD      0x50000200
                  |L3.140|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_Ctrl||, CODE, READONLY, ALIGN=2

                  DrvI2C_Ctrl PROC
;;;151    /*---------------------------------------------------------------------------------------------------------*/
;;;152    void DrvI2C_Ctrl(E_I2C_PORT port, uint8_t start, uint8_t stop, uint8_t intFlag, uint8_t ack)
000000  b5f0              PUSH     {r4-r7,lr}
;;;153    {
000002  9c05              LDR      r4,[sp,#0x14]
;;;154        
;;;155        uint32_t Reg = 0;
000004  2500              MOVS     r5,#0
;;;156            
;;;157        if (start)
000006  2900              CMP      r1,#0
000008  d001              BEQ      |L4.14|
;;;158            Reg |= I2C_STA;
00000a  2620              MOVS     r6,#0x20
00000c  4335              ORRS     r5,r5,r6
                  |L4.14|
;;;159        if (stop)
00000e  2a00              CMP      r2,#0
000010  d001              BEQ      |L4.22|
;;;160            Reg |= I2C_STO;
000012  2610              MOVS     r6,#0x10
000014  4335              ORRS     r5,r5,r6
                  |L4.22|
;;;161        if (intFlag)
000016  2b00              CMP      r3,#0
000018  d001              BEQ      |L4.30|
;;;162            Reg |= I2C_SI;
00001a  2608              MOVS     r6,#8
00001c  4335              ORRS     r5,r5,r6
                  |L4.30|
;;;163        if (ack)
00001e  2c00              CMP      r4,#0
000020  d001              BEQ      |L4.38|
;;;164            Reg |= I2C_AA;
000022  2604              MOVS     r6,#4
000024  4335              ORRS     r5,r5,r6
                  |L4.38|
;;;165    
;;;166        if (port)
000026  2800              CMP      r0,#0
000028  d007              BEQ      |L4.58|
;;;167            *((__IO uint32_t *)&I2C1->I2CON) = (*((__IO uint32_t *)&I2C1->I2CON) & ~0x3C) | Reg;
00002a  4e08              LDR      r6,|L4.76|
00002c  6836              LDR      r6,[r6,#0]
00002e  273c              MOVS     r7,#0x3c
000030  43be              BICS     r6,r6,r7
000032  432e              ORRS     r6,r6,r5
000034  4f05              LDR      r7,|L4.76|
000036  603e              STR      r6,[r7,#0]
000038  e006              B        |L4.72|
                  |L4.58|
;;;168        else
;;;169            *((__IO uint32_t *)&I2C0->I2CON) = (*((__IO uint32_t *)&I2C0->I2CON) & ~0x3C) | Reg;
00003a  4e05              LDR      r6,|L4.80|
00003c  6836              LDR      r6,[r6,#0]
00003e  273c              MOVS     r7,#0x3c
000040  43be              BICS     r6,r6,r7
000042  432e              ORRS     r6,r6,r5
000044  4f02              LDR      r7,|L4.80|
000046  603e              STR      r6,[r7,#0]
                  |L4.72|
;;;170    }
000048  bdf0              POP      {r4-r7,pc}
;;;171    
                          ENDP

00004a  0000              DCW      0x0000
                  |L4.76|
                          DCD      0x40120000
                  |L4.80|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_DisableInt||, CODE, READONLY, ALIGN=2

                  DrvI2C_DisableInt PROC
;;;479    /*---------------------------------------------------------------------------------------------------------*/
;;;480    int32_t DrvI2C_DisableInt(E_I2C_PORT port)
000000  b510              PUSH     {r4,lr}
;;;481    {
000002  4604              MOV      r4,r0
;;;482        if (port)
000004  2c00              CMP      r4,#0
000006  d009              BEQ      |L5.28|
;;;483        {
;;;484            I2C1->I2CON.EI = 0;
000008  480a              LDR      r0,|L5.52|
00000a  6800              LDR      r0,[r0,#0]
00000c  2180              MOVS     r1,#0x80
00000e  4388              BICS     r0,r0,r1
000010  4908              LDR      r1,|L5.52|
000012  6008              STR      r0,[r1,#0]
;;;485            NVIC_DisableIRQ(I2C1_IRQn);
000014  2013              MOVS     r0,#0x13
000016  f7fffffe          BL       NVIC_DisableIRQ
00001a  e008              B        |L5.46|
                  |L5.28|
;;;486        }
;;;487        else
;;;488        {
;;;489            I2C0->I2CON.EI = 0;
00001c  4806              LDR      r0,|L5.56|
00001e  6800              LDR      r0,[r0,#0]
000020  2180              MOVS     r1,#0x80
000022  4388              BICS     r0,r0,r1
000024  4904              LDR      r1,|L5.56|
000026  6008              STR      r0,[r1,#0]
;;;490            NVIC_DisableIRQ(I2C0_IRQn);
000028  2012              MOVS     r0,#0x12
00002a  f7fffffe          BL       NVIC_DisableIRQ
                  |L5.46|
;;;491        }
;;;492    
;;;493        return 0;
00002e  2000              MOVS     r0,#0
;;;494    }
000030  bd10              POP      {r4,pc}
;;;495    
                          ENDP

000032  0000              DCW      0x0000
                  |L5.52|
                          DCD      0x40120000
                  |L5.56|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_EnableInt||, CODE, READONLY, ALIGN=2

                  DrvI2C_EnableInt PROC
;;;450    /*---------------------------------------------------------------------------------------------------------*/
;;;451    int32_t DrvI2C_EnableInt(E_I2C_PORT port)
000000  b510              PUSH     {r4,lr}
;;;452    {
000002  4604              MOV      r4,r0
;;;453        if (port)
000004  2c00              CMP      r4,#0
000006  d00e              BEQ      |L6.38|
;;;454        {
;;;455            I2C1->I2CON.EI = 1;
000008  480f              LDR      r0,|L6.72|
00000a  6800              LDR      r0,[r0,#0]
00000c  2180              MOVS     r1,#0x80
00000e  4388              BICS     r0,r0,r1
000010  3080              ADDS     r0,r0,#0x80
000012  490d              LDR      r1,|L6.72|
000014  6008              STR      r0,[r1,#0]
;;;456            NVIC_SetPriority(I2C1_IRQn, (1<<__NVIC_PRIO_BITS) - 2);
000016  2102              MOVS     r1,#2
000018  2013              MOVS     r0,#0x13
00001a  f7fffffe          BL       NVIC_SetPriority
;;;457            NVIC_EnableIRQ(I2C1_IRQn);
00001e  2013              MOVS     r0,#0x13
000020  f7fffffe          BL       NVIC_EnableIRQ
000024  e00d              B        |L6.66|
                  |L6.38|
;;;458        }
;;;459        else
;;;460        {
;;;461            I2C0->I2CON.EI = 1;
000026  4809              LDR      r0,|L6.76|
000028  6800              LDR      r0,[r0,#0]
00002a  2180              MOVS     r1,#0x80
00002c  4388              BICS     r0,r0,r1
00002e  3080              ADDS     r0,r0,#0x80
000030  4906              LDR      r1,|L6.76|
000032  6008              STR      r0,[r1,#0]
;;;462            NVIC_SetPriority(I2C0_IRQn, (1<<__NVIC_PRIO_BITS) - 2);
000034  2102              MOVS     r1,#2
000036  2012              MOVS     r0,#0x12
000038  f7fffffe          BL       NVIC_SetPriority
;;;463            NVIC_EnableIRQ(I2C0_IRQn);
00003c  2012              MOVS     r0,#0x12
00003e  f7fffffe          BL       NVIC_EnableIRQ
                  |L6.66|
;;;464        }
;;;465    
;;;466        return 0;
000042  2000              MOVS     r0,#0
;;;467    }
000044  bd10              POP      {r4,pc}
;;;468    
                          ENDP

000046  0000              DCW      0x0000
                  |L6.72|
                          DCD      0x40120000
                  |L6.76|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_GetClockFreq||, CODE, READONLY, ALIGN=2

                  DrvI2C_GetClockFreq PROC
;;;431    /*---------------------------------------------------------------------------------------------------------*/
;;;432    uint32_t DrvI2C_GetClockFreq(E_I2C_PORT port)
000000  b570              PUSH     {r4-r6,lr}
;;;433    {
000002  4604              MOV      r4,r0
;;;434        uint32_t divider;     
;;;435     
;;;436        divider = ( (port)? I2C1->I2CLK:I2C0->I2CLK );
000004  2c00              CMP      r4,#0
000006  d002              BEQ      |L7.14|
000008  4806              LDR      r0,|L7.36|
00000a  6900              LDR      r0,[r0,#0x10]
00000c  e001              B        |L7.18|
                  |L7.14|
00000e  4806              LDR      r0,|L7.40|
000010  6900              LDR      r0,[r0,#0x10]
                  |L7.18|
000012  4605              MOV      r5,r0
;;;437        return ( SystemCoreClock / ((divider+1)<<2) );
000014  1c68              ADDS     r0,r5,#1
000016  0081              LSLS     r1,r0,#2
000018  4804              LDR      r0,|L7.44|
00001a  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00001c  f7fffffe          BL       __aeabi_uidivmod
;;;438    }
000020  bd70              POP      {r4-r6,pc}
;;;439    
                          ENDP

000022  0000              DCW      0x0000
                  |L7.36|
                          DCD      0x40120000
                  |L7.40|
                          DCD      0x40020000
                  |L7.44|
                          DCD      SystemCoreClock

                          AREA ||i.DrvI2C_GetIntFlag||, CODE, READONLY, ALIGN=2

                  DrvI2C_GetIntFlag PROC
;;;229    /*---------------------------------------------------------------------------------------------------------*/
;;;230    uint8_t DrvI2C_GetIntFlag(E_I2C_PORT port)
000000  4601              MOV      r1,r0
;;;231    {
;;;232        if (port)
000002  2900              CMP      r1,#0
000004  d004              BEQ      |L8.16|
;;;233        {
;;;234            return I2C1->I2CON.SI;
000006  4805              LDR      r0,|L8.28|
000008  6800              LDR      r0,[r0,#0]
00000a  0700              LSLS     r0,r0,#28
00000c  0fc0              LSRS     r0,r0,#31
                  |L8.14|
;;;235        }   
;;;236        else
;;;237        {
;;;238            return I2C0->I2CON.SI;    
;;;239        }
;;;240    }
00000e  4770              BX       lr
                  |L8.16|
000010  4803              LDR      r0,|L8.32|
000012  6800              LDR      r0,[r0,#0]            ;238
000014  0700              LSLS     r0,r0,#28             ;238
000016  0fc0              LSRS     r0,r0,#31             ;238
000018  e7f9              B        |L8.14|
;;;241    
                          ENDP

00001a  0000              DCW      0x0000
                  |L8.28|
                          DCD      0x40120000
                  |L8.32|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_GetStatus||, CODE, READONLY, ALIGN=2

                  DrvI2C_GetStatus PROC
;;;298    /*---------------------------------------------------------------------------------------------------------*/
;;;299    uint32_t DrvI2C_GetStatus(E_I2C_PORT port)
000000  4601              MOV      r1,r0
;;;300    {
;;;301        if (port)
000002  2900              CMP      r1,#0
000004  d002              BEQ      |L9.12|
;;;302        {
;;;303            return I2C1->I2CSTATUS;
000006  4803              LDR      r0,|L9.20|
000008  68c0              LDR      r0,[r0,#0xc]
                  |L9.10|
;;;304        }
;;;305        else
;;;306        {
;;;307            return I2C0->I2CSTATUS;
;;;308        }   
;;;309    }
00000a  4770              BX       lr
                  |L9.12|
00000c  4802              LDR      r0,|L9.24|
00000e  68c0              LDR      r0,[r0,#0xc]          ;307
000010  e7fb              B        |L9.10|
;;;310    
                          ENDP

000012  0000              DCW      0x0000
                  |L9.20|
                          DCD      0x40120000
                  |L9.24|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_GetVersion||, CODE, READONLY, ALIGN=2

                  DrvI2C_GetVersion PROC
;;;815    /*---------------------------------------------------------------------------------------------------------*/
;;;816    uint32_t DrvI2C_GetVersion(void)
000000  4800              LDR      r0,|L10.4|
;;;817    {
;;;818        return DRVI2C_VERSION_NUM;
;;;819    }
000002  4770              BX       lr
;;;820    
                          ENDP

                  |L10.4|
                          DCD      0x00010202

                          AREA ||i.DrvI2C_InstallCallback||, CODE, READONLY, ALIGN=2

                  DrvI2C_InstallCallback PROC
;;;666    /*---------------------------------------------------------------------------------------------------------*/
;;;667    int32_t DrvI2C_InstallCallback(E_I2C_PORT port, E_I2C_CALLBACK_TYPE Type, I2C_CALLBACK callbackfn)
000000  4603              MOV      r3,r0
;;;668    {
;;;669        if (port == I2C_PORT0)
000002  2b00              CMP      r3,#0
000004  d117              BNE      |L11.54|
;;;670        {   
;;;671            switch(Type)
000006  2900              CMP      r1,#0
000008  d006              BEQ      |L11.24|
00000a  2901              CMP      r1,#1
00000c  d007              BEQ      |L11.30|
00000e  2902              CMP      r1,#2
000010  d008              BEQ      |L11.36|
000012  2903              CMP      r1,#3
000014  d10c              BNE      |L11.48|
000016  e008              B        |L11.42|
                  |L11.24|
;;;672            {
;;;673                case I2CFUNC:
;;;674                {
;;;675                    I2CHandler0.I2CCallBackFn = callbackfn;  
000018  4815              LDR      r0,|L11.112|
00001a  6002              STR      r2,[r0,#0]  ; I2CHandler0
;;;676                    break;
00001c  e00a              B        |L11.52|
                  |L11.30|
;;;677                }
;;;678                case ARBITLOSS:
;;;679                {
;;;680                    I2CHandler0.ArbitLossCallBackFn = callbackfn;  
00001e  4814              LDR      r0,|L11.112|
000020  6042              STR      r2,[r0,#4]  ; I2CHandler0
;;;681                    break;
000022  e007              B        |L11.52|
                  |L11.36|
;;;682                }
;;;683                case BUSERROR:
;;;684                {
;;;685                    I2CHandler0.BusErrCallBackFn = callbackfn;  
000024  4812              LDR      r0,|L11.112|
000026  6082              STR      r2,[r0,#8]  ; I2CHandler0
;;;686                    break;
000028  e004              B        |L11.52|
                  |L11.42|
;;;687                }        
;;;688                case TIMEOUT:
;;;689                {
;;;690                    I2CHandler0.TimeoutCallBackFn = callbackfn;  
00002a  4811              LDR      r0,|L11.112|
00002c  60c2              STR      r2,[r0,#0xc]  ; I2CHandler0
;;;691                    break;
00002e  e001              B        |L11.52|
                  |L11.48|
;;;692                }
;;;693                default:
;;;694                    return E_DRVI2C_ERR_ARGUMENT;   
000030  4810              LDR      r0,|L11.116|
                  |L11.50|
;;;695            }
;;;696        }
;;;697        else if (port == I2C_PORT1)
;;;698        {   
;;;699            switch(Type)
;;;700            {
;;;701                case I2CFUNC:
;;;702                {
;;;703                    I2CHandler1.I2CCallBackFn = callbackfn;  
;;;704                    break;
;;;705                }
;;;706                case ARBITLOSS:
;;;707                {
;;;708                    I2CHandler1.ArbitLossCallBackFn = callbackfn;  
;;;709                    break;
;;;710                }
;;;711                case BUSERROR:
;;;712                {
;;;713                    I2CHandler1.BusErrCallBackFn = callbackfn;  
;;;714                    break;
;;;715                }        
;;;716                case TIMEOUT:
;;;717                {
;;;718                    I2CHandler1.TimeoutCallBackFn = callbackfn;  
;;;719                    break;
;;;720                }
;;;721                default:
;;;722                    return E_DRVI2C_ERR_ARGUMENT;  
;;;723            }
;;;724        }       
;;;725        return 0;
;;;726    }
000032  4770              BX       lr
                  |L11.52|
000034  e019              B        |L11.106|
                  |L11.54|
000036  2b01              CMP      r3,#1                 ;697
000038  d117              BNE      |L11.106|
00003a  2900              CMP      r1,#0                 ;699
00003c  d006              BEQ      |L11.76|
00003e  2901              CMP      r1,#1                 ;699
000040  d007              BEQ      |L11.82|
000042  2902              CMP      r1,#2                 ;699
000044  d008              BEQ      |L11.88|
000046  2903              CMP      r1,#3                 ;699
000048  d10c              BNE      |L11.100|
00004a  e008              B        |L11.94|
                  |L11.76|
00004c  480a              LDR      r0,|L11.120|
00004e  6002              STR      r2,[r0,#0]            ;703  ; I2CHandler1
000050  e00a              B        |L11.104|
                  |L11.82|
000052  4809              LDR      r0,|L11.120|
000054  6042              STR      r2,[r0,#4]            ;708  ; I2CHandler1
000056  e007              B        |L11.104|
                  |L11.88|
000058  4807              LDR      r0,|L11.120|
00005a  6082              STR      r2,[r0,#8]            ;713  ; I2CHandler1
00005c  e004              B        |L11.104|
                  |L11.94|
00005e  4806              LDR      r0,|L11.120|
000060  60c2              STR      r2,[r0,#0xc]          ;718  ; I2CHandler1
000062  e001              B        |L11.104|
                  |L11.100|
000064  4803              LDR      r0,|L11.116|
000066  e7e4              B        |L11.50|
                  |L11.104|
000068  bf00              NOP                            ;704
                  |L11.106|
00006a  2000              MOVS     r0,#0                 ;725
00006c  e7e1              B        |L11.50|
;;;727    
                          ENDP

00006e  0000              DCW      0x0000
                  |L11.112|
                          DCD      I2CHandler0
                  |L11.116|
                          DCD      0xffff8b01
                  |L11.120|
                          DCD      I2CHandler1

                          AREA ||i.DrvI2C_Open||, CODE, READONLY, ALIGN=2

                  DrvI2C_Open PROC
;;;323    /*---------------------------------------------------------------------------------------------------------*/
;;;324    int32_t DrvI2C_Open(E_I2C_PORT port, uint32_t u32BusClock)
000000  b5f8              PUSH     {r3-r7,lr}
;;;325    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;326        uint32_t divider;     
;;;327     
;;;328        divider = (uint32_t) (((SystemCoreClock*10)/(u32BusClock * 4) + 5) / 10 - 1);   /* Compute proper divider for I2C clock */
000006  00b1              LSLS     r1,r6,#2
000008  4a2d              LDR      r2,|L12.192|
00000a  6812              LDR      r2,[r2,#0]  ; SystemCoreClock
00000c  230a              MOVS     r3,#0xa
00000e  435a              MULS     r2,r3,r2
000010  4610              MOV      r0,r2
000012  f7fffffe          BL       __aeabi_uidivmod
000016  1d47              ADDS     r7,r0,#5
000018  210a              MOVS     r1,#0xa
00001a  4638              MOV      r0,r7
00001c  f7fffffe          BL       __aeabi_uidivmod
000020  1e44              SUBS     r4,r0,#1
;;;329        
;;;330        if (divider < 4)
000022  2c04              CMP      r4,#4
000024  d200              BCS      |L12.40|
;;;331        {
;;;332            divider = 4;
000026  2404              MOVS     r4,#4
                  |L12.40|
;;;333        }
;;;334    
;;;335        if (port)
000028  2d00              CMP      r5,#0
00002a  d023              BEQ      |L12.116|
;;;336        {
;;;337            SYSCLK->APBCLK.I2C1_EN = 1;
00002c  4825              LDR      r0,|L12.196|
00002e  6880              LDR      r0,[r0,#8]
000030  2101              MOVS     r1,#1
000032  0249              LSLS     r1,r1,#9
000034  4388              BICS     r0,r0,r1
000036  1840              ADDS     r0,r0,r1
000038  4922              LDR      r1,|L12.196|
00003a  6088              STR      r0,[r1,#8]
;;;338            SYS->IPRSTC2.I2C1_RST = 1;
00003c  2005              MOVS     r0,#5
00003e  0700              LSLS     r0,r0,#28
000040  68c0              LDR      r0,[r0,#0xc]
000042  2101              MOVS     r1,#1
000044  0249              LSLS     r1,r1,#9
000046  4388              BICS     r0,r0,r1
000048  1840              ADDS     r0,r0,r1
00004a  2105              MOVS     r1,#5
00004c  0709              LSLS     r1,r1,#28
00004e  60c8              STR      r0,[r1,#0xc]
;;;339            SYS->IPRSTC2.I2C1_RST = 0;
000050  4608              MOV      r0,r1
000052  68c0              LDR      r0,[r0,#0xc]
000054  2101              MOVS     r1,#1
000056  0249              LSLS     r1,r1,#9
000058  4388              BICS     r0,r0,r1
00005a  2105              MOVS     r1,#5
00005c  0709              LSLS     r1,r1,#28
00005e  60c8              STR      r0,[r1,#0xc]
;;;340            I2C1->I2CON.ENS1 = 1;
000060  4819              LDR      r0,|L12.200|
000062  6800              LDR      r0,[r0,#0]
000064  2140              MOVS     r1,#0x40
000066  4388              BICS     r0,r0,r1
000068  3040              ADDS     r0,r0,#0x40
00006a  4917              LDR      r1,|L12.200|
00006c  6008              STR      r0,[r1,#0]
;;;341            I2C1->I2CLK = divider;
00006e  4608              MOV      r0,r1
000070  6104              STR      r4,[r0,#0x10]
000072  e022              B        |L12.186|
                  |L12.116|
;;;342        }
;;;343        else
;;;344        {
;;;345            SYSCLK->APBCLK.I2C0_EN = 1;
000074  4813              LDR      r0,|L12.196|
000076  6880              LDR      r0,[r0,#8]
000078  21ff              MOVS     r1,#0xff
00007a  3101              ADDS     r1,#1
00007c  4388              BICS     r0,r0,r1
00007e  1840              ADDS     r0,r0,r1
000080  4910              LDR      r1,|L12.196|
000082  6088              STR      r0,[r1,#8]
;;;346            SYS->IPRSTC2.I2C0_RST = 1;
000084  2005              MOVS     r0,#5
000086  0700              LSLS     r0,r0,#28
000088  68c0              LDR      r0,[r0,#0xc]
00008a  21ff              MOVS     r1,#0xff
00008c  3101              ADDS     r1,#1
00008e  4388              BICS     r0,r0,r1
000090  1840              ADDS     r0,r0,r1
000092  2105              MOVS     r1,#5
000094  0709              LSLS     r1,r1,#28
000096  60c8              STR      r0,[r1,#0xc]
;;;347            SYS->IPRSTC2.I2C0_RST = 0;  
000098  4608              MOV      r0,r1
00009a  68c0              LDR      r0,[r0,#0xc]
00009c  21ff              MOVS     r1,#0xff
00009e  3101              ADDS     r1,#1
0000a0  4388              BICS     r0,r0,r1
0000a2  2105              MOVS     r1,#5
0000a4  0709              LSLS     r1,r1,#28
0000a6  60c8              STR      r0,[r1,#0xc]
;;;348            I2C0->I2CON.ENS1 = 1;
0000a8  4808              LDR      r0,|L12.204|
0000aa  6800              LDR      r0,[r0,#0]
0000ac  2140              MOVS     r1,#0x40
0000ae  4388              BICS     r0,r0,r1
0000b0  3040              ADDS     r0,r0,#0x40
0000b2  4906              LDR      r1,|L12.204|
0000b4  6008              STR      r0,[r1,#0]
;;;349            I2C0->I2CLK = divider;
0000b6  4608              MOV      r0,r1
0000b8  6104              STR      r4,[r0,#0x10]
                  |L12.186|
;;;350        }
;;;351    
;;;352        return 0;
0000ba  2000              MOVS     r0,#0
;;;353    }
0000bc  bdf8              POP      {r3-r7,pc}
;;;354    
                          ENDP

0000be  0000              DCW      0x0000
                  |L12.192|
                          DCD      SystemCoreClock
                  |L12.196|
                          DCD      0x50000200
                  |L12.200|
                          DCD      0x40120000
                  |L12.204|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_ReadData||, CODE, READONLY, ALIGN=2

                  DrvI2C_ReadData PROC
;;;206    /*---------------------------------------------------------------------------------------------------------*/
;;;207    uint8_t DrvI2C_ReadData(E_I2C_PORT port)
000000  4601              MOV      r1,r0
;;;208    {
;;;209        if (port)
000002  2900              CMP      r1,#0
000004  d003              BEQ      |L13.14|
;;;210        {                          
;;;211            return I2C1->I2CDAT;
000006  4804              LDR      r0,|L13.24|
000008  6880              LDR      r0,[r0,#8]
00000a  b2c0              UXTB     r0,r0
                  |L13.12|
;;;212        }   
;;;213        else
;;;214        {
;;;215            return I2C0->I2CDAT;  
;;;216        }
;;;217    }
00000c  4770              BX       lr
                  |L13.14|
00000e  4803              LDR      r0,|L13.28|
000010  6880              LDR      r0,[r0,#8]            ;215
000012  b2c0              UXTB     r0,r0                 ;215
000014  e7fa              B        |L13.12|
;;;218    
                          ENDP

000016  0000              DCW      0x0000
                  |L13.24|
                          DCD      0x40120000
                  |L13.28|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_SetAddress||, CODE, READONLY, ALIGN=2

                  DrvI2C_SetAddress PROC
;;;537    /*---------------------------------------------------------------------------------------------------------*/
;;;538    int32_t DrvI2C_SetAddress(E_I2C_PORT port, uint8_t slaveNo, uint8_t slave_addr, uint8_t GC_Flag)
000000  b570              PUSH     {r4-r6,lr}
;;;539    {
000002  4604              MOV      r4,r0
;;;540        if (port)
000004  2c00              CMP      r4,#0
000006  d05b              BEQ      |L14.192|
;;;541        {
;;;542            switch (slaveNo)
000008  2900              CMP      r1,#0
00000a  d006              BEQ      |L14.26|
00000c  2901              CMP      r1,#1
00000e  d018              BEQ      |L14.66|
000010  2902              CMP      r1,#2
000012  d02a              BEQ      |L14.106|
000014  2903              CMP      r1,#3
000016  d150              BNE      |L14.186|
000018  e03b              B        |L14.146|
                  |L14.26|
;;;543            {
;;;544                case 0:
;;;545                    I2C1->I2CADDR0.I2CADDR = slave_addr;
00001a  4858              LDR      r0,|L14.380|
00001c  6840              LDR      r0,[r0,#4]
00001e  25fe              MOVS     r5,#0xfe
000020  43a8              BICS     r0,r0,r5
000022  0055              LSLS     r5,r2,#1
000024  26fe              MOVS     r6,#0xfe
000026  4035              ANDS     r5,r5,r6
000028  4328              ORRS     r0,r0,r5
00002a  4d54              LDR      r5,|L14.380|
00002c  6068              STR      r0,[r5,#4]
;;;546                    I2C1->I2CADDR0.GC      = GC_Flag;
00002e  4628              MOV      r0,r5
000030  6840              LDR      r0,[r0,#4]
000032  0840              LSRS     r0,r0,#1
000034  0040              LSLS     r0,r0,#1
000036  07dd              LSLS     r5,r3,#31
000038  0fed              LSRS     r5,r5,#31
00003a  4328              ORRS     r0,r0,r5
00003c  4d4f              LDR      r5,|L14.380|
00003e  6068              STR      r0,[r5,#4]
;;;547                    break;
000040  e03d              B        |L14.190|
                  |L14.66|
;;;548                case 1:
;;;549                    I2C1->I2CADDR1.I2CADDR = slave_addr;
000042  484e              LDR      r0,|L14.380|
000044  6980              LDR      r0,[r0,#0x18]
000046  25fe              MOVS     r5,#0xfe
000048  43a8              BICS     r0,r0,r5
00004a  0055              LSLS     r5,r2,#1
00004c  26fe              MOVS     r6,#0xfe
00004e  4035              ANDS     r5,r5,r6
000050  4328              ORRS     r0,r0,r5
000052  4d4a              LDR      r5,|L14.380|
000054  61a8              STR      r0,[r5,#0x18]
;;;550                    I2C1->I2CADDR1.GC      = GC_Flag;
000056  4628              MOV      r0,r5
000058  6980              LDR      r0,[r0,#0x18]
00005a  0840              LSRS     r0,r0,#1
00005c  0040              LSLS     r0,r0,#1
00005e  07dd              LSLS     r5,r3,#31
000060  0fed              LSRS     r5,r5,#31
000062  4328              ORRS     r0,r0,r5
000064  4d45              LDR      r5,|L14.380|
000066  61a8              STR      r0,[r5,#0x18]
;;;551                    break;
000068  e029              B        |L14.190|
                  |L14.106|
;;;552                case 2:
;;;553                    I2C1->I2CADDR2.I2CADDR = slave_addr;
00006a  4844              LDR      r0,|L14.380|
00006c  69c0              LDR      r0,[r0,#0x1c]
00006e  25fe              MOVS     r5,#0xfe
000070  43a8              BICS     r0,r0,r5
000072  0055              LSLS     r5,r2,#1
000074  26fe              MOVS     r6,#0xfe
000076  4035              ANDS     r5,r5,r6
000078  4328              ORRS     r0,r0,r5
00007a  4d40              LDR      r5,|L14.380|
00007c  61e8              STR      r0,[r5,#0x1c]
;;;554                    I2C1->I2CADDR2.GC      = GC_Flag;
00007e  4628              MOV      r0,r5
000080  69c0              LDR      r0,[r0,#0x1c]
000082  0840              LSRS     r0,r0,#1
000084  0040              LSLS     r0,r0,#1
000086  07dd              LSLS     r5,r3,#31
000088  0fed              LSRS     r5,r5,#31
00008a  4328              ORRS     r0,r0,r5
00008c  4d3b              LDR      r5,|L14.380|
00008e  61e8              STR      r0,[r5,#0x1c]
;;;555                    break;
000090  e015              B        |L14.190|
                  |L14.146|
;;;556                case 3:
;;;557                    I2C1->I2CADDR3.I2CADDR = slave_addr;
000092  483a              LDR      r0,|L14.380|
000094  6a00              LDR      r0,[r0,#0x20]
000096  25fe              MOVS     r5,#0xfe
000098  43a8              BICS     r0,r0,r5
00009a  0055              LSLS     r5,r2,#1
00009c  26fe              MOVS     r6,#0xfe
00009e  4035              ANDS     r5,r5,r6
0000a0  4328              ORRS     r0,r0,r5
0000a2  4d36              LDR      r5,|L14.380|
0000a4  6228              STR      r0,[r5,#0x20]
;;;558                    I2C1->I2CADDR3.GC      = GC_Flag;
0000a6  4628              MOV      r0,r5
0000a8  6a00              LDR      r0,[r0,#0x20]
0000aa  0840              LSRS     r0,r0,#1
0000ac  0040              LSLS     r0,r0,#1
0000ae  07dd              LSLS     r5,r3,#31
0000b0  0fed              LSRS     r5,r5,#31
0000b2  4328              ORRS     r0,r0,r5
0000b4  4d31              LDR      r5,|L14.380|
0000b6  6228              STR      r0,[r5,#0x20]
;;;559                    break;
0000b8  e001              B        |L14.190|
                  |L14.186|
;;;560                default:
;;;561                    return E_DRVI2C_ERR_ARGUMENT;
0000ba  4831              LDR      r0,|L14.384|
                  |L14.188|
;;;562            }
;;;563        }
;;;564        else
;;;565        {
;;;566            switch (slaveNo)
;;;567            {
;;;568                case 0:
;;;569                    I2C0->I2CADDR0.I2CADDR  = slave_addr;
;;;570                    I2C0->I2CADDR0.GC       = GC_Flag;
;;;571                    break;
;;;572                case 1:
;;;573                    I2C0->I2CADDR1.I2CADDR = slave_addr;
;;;574                    I2C0->I2CADDR1.GC      = GC_Flag;
;;;575                    break;
;;;576                case 2:
;;;577                    I2C0->I2CADDR2.I2CADDR = slave_addr;
;;;578                    I2C0->I2CADDR2.GC      = GC_Flag;
;;;579                    break;
;;;580                case 3:
;;;581                    I2C0->I2CADDR3.I2CADDR = slave_addr;
;;;582                    I2C0->I2CADDR3.GC      = GC_Flag;
;;;583                    break;
;;;584                default:
;;;585                    return E_DRVI2C_ERR_ARGUMENT;
;;;586            }   
;;;587        }
;;;588        return 0;
;;;589    }
0000bc  bd70              POP      {r4-r6,pc}
                  |L14.190|
0000be  e05b              B        |L14.376|
                  |L14.192|
0000c0  2900              CMP      r1,#0                 ;566
0000c2  d006              BEQ      |L14.210|
0000c4  2901              CMP      r1,#1                 ;566
0000c6  d018              BEQ      |L14.250|
0000c8  2902              CMP      r1,#2                 ;566
0000ca  d02a              BEQ      |L14.290|
0000cc  2903              CMP      r1,#3                 ;566
0000ce  d150              BNE      |L14.370|
0000d0  e03b              B        |L14.330|
                  |L14.210|
0000d2  482c              LDR      r0,|L14.388|
0000d4  6840              LDR      r0,[r0,#4]            ;569
0000d6  25fe              MOVS     r5,#0xfe              ;569
0000d8  43a8              BICS     r0,r0,r5              ;569
0000da  0055              LSLS     r5,r2,#1              ;569
0000dc  26fe              MOVS     r6,#0xfe              ;569
0000de  4035              ANDS     r5,r5,r6              ;569
0000e0  4328              ORRS     r0,r0,r5              ;569
0000e2  4d28              LDR      r5,|L14.388|
0000e4  6068              STR      r0,[r5,#4]            ;569
0000e6  4628              MOV      r0,r5                 ;570
0000e8  6840              LDR      r0,[r0,#4]            ;570
0000ea  0840              LSRS     r0,r0,#1              ;570
0000ec  0040              LSLS     r0,r0,#1              ;570
0000ee  07dd              LSLS     r5,r3,#31             ;570
0000f0  0fed              LSRS     r5,r5,#31             ;570
0000f2  4328              ORRS     r0,r0,r5              ;570
0000f4  4d23              LDR      r5,|L14.388|
0000f6  6068              STR      r0,[r5,#4]            ;570
0000f8  e03d              B        |L14.374|
                  |L14.250|
0000fa  4822              LDR      r0,|L14.388|
0000fc  6980              LDR      r0,[r0,#0x18]         ;573
0000fe  25fe              MOVS     r5,#0xfe              ;573
000100  43a8              BICS     r0,r0,r5              ;573
000102  0055              LSLS     r5,r2,#1              ;573
000104  26fe              MOVS     r6,#0xfe              ;573
000106  4035              ANDS     r5,r5,r6              ;573
000108  4328              ORRS     r0,r0,r5              ;573
00010a  4d1e              LDR      r5,|L14.388|
00010c  61a8              STR      r0,[r5,#0x18]         ;573
00010e  4628              MOV      r0,r5                 ;574
000110  6980              LDR      r0,[r0,#0x18]         ;574
000112  0840              LSRS     r0,r0,#1              ;574
000114  0040              LSLS     r0,r0,#1              ;574
000116  07dd              LSLS     r5,r3,#31             ;574
000118  0fed              LSRS     r5,r5,#31             ;574
00011a  4328              ORRS     r0,r0,r5              ;574
00011c  4d19              LDR      r5,|L14.388|
00011e  61a8              STR      r0,[r5,#0x18]         ;574
000120  e029              B        |L14.374|
                  |L14.290|
000122  4818              LDR      r0,|L14.388|
000124  69c0              LDR      r0,[r0,#0x1c]         ;577
000126  25fe              MOVS     r5,#0xfe              ;577
000128  43a8              BICS     r0,r0,r5              ;577
00012a  0055              LSLS     r5,r2,#1              ;577
00012c  26fe              MOVS     r6,#0xfe              ;577
00012e  4035              ANDS     r5,r5,r6              ;577
000130  4328              ORRS     r0,r0,r5              ;577
000132  4d14              LDR      r5,|L14.388|
000134  61e8              STR      r0,[r5,#0x1c]         ;577
000136  4628              MOV      r0,r5                 ;578
000138  69c0              LDR      r0,[r0,#0x1c]         ;578
00013a  0840              LSRS     r0,r0,#1              ;578
00013c  0040              LSLS     r0,r0,#1              ;578
00013e  07dd              LSLS     r5,r3,#31             ;578
000140  0fed              LSRS     r5,r5,#31             ;578
000142  4328              ORRS     r0,r0,r5              ;578
000144  4d0f              LDR      r5,|L14.388|
000146  61e8              STR      r0,[r5,#0x1c]         ;578
000148  e015              B        |L14.374|
                  |L14.330|
00014a  480e              LDR      r0,|L14.388|
00014c  6a00              LDR      r0,[r0,#0x20]         ;581
00014e  25fe              MOVS     r5,#0xfe              ;581
000150  43a8              BICS     r0,r0,r5              ;581
000152  0055              LSLS     r5,r2,#1              ;581
000154  26fe              MOVS     r6,#0xfe              ;581
000156  4035              ANDS     r5,r5,r6              ;581
000158  4328              ORRS     r0,r0,r5              ;581
00015a  4d0a              LDR      r5,|L14.388|
00015c  6228              STR      r0,[r5,#0x20]         ;581
00015e  4628              MOV      r0,r5                 ;582
000160  6a00              LDR      r0,[r0,#0x20]         ;582
000162  0840              LSRS     r0,r0,#1              ;582
000164  0040              LSLS     r0,r0,#1              ;582
000166  07dd              LSLS     r5,r3,#31             ;582
000168  0fed              LSRS     r5,r5,#31             ;582
00016a  4328              ORRS     r0,r0,r5              ;582
00016c  4d05              LDR      r5,|L14.388|
00016e  6228              STR      r0,[r5,#0x20]         ;582
000170  e001              B        |L14.374|
                  |L14.370|
000172  4803              LDR      r0,|L14.384|
000174  e7a2              B        |L14.188|
                  |L14.374|
000176  bf00              NOP                            ;571
                  |L14.376|
000178  2000              MOVS     r0,#0                 ;588
00017a  e79f              B        |L14.188|
;;;590    
                          ENDP

                  |L14.380|
                          DCD      0x40120000
                  |L14.384|
                          DCD      0xffff8b01
                  |L14.388|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_SetAddressMask||, CODE, READONLY, ALIGN=2

                  DrvI2C_SetAddressMask PROC
;;;604    /*---------------------------------------------------------------------------------------------------------*/
;;;605    int32_t DrvI2C_SetAddressMask(E_I2C_PORT port, uint8_t slaveNo, uint8_t slaveAddrMask)
000000  b530              PUSH     {r4,r5,lr}
;;;606    {
000002  4603              MOV      r3,r0
;;;607        slaveAddrMask <<= 1;
000004  0650              LSLS     r0,r2,#25
000006  0e02              LSRS     r2,r0,#24
;;;608        if (port)
000008  2b00              CMP      r3,#0
00000a  d037              BEQ      |L15.124|
;;;609        {
;;;610            switch (slaveNo)
00000c  2900              CMP      r1,#0
00000e  d006              BEQ      |L15.30|
000010  2901              CMP      r1,#1
000012  d00f              BEQ      |L15.52|
000014  2902              CMP      r1,#2
000016  d018              BEQ      |L15.74|
000018  2903              CMP      r1,#3
00001a  d12c              BNE      |L15.118|
00001c  e020              B        |L15.96|
                  |L15.30|
;;;611            {
;;;612                case 0:
;;;613                    I2C1->I2CADM0.I2CADM = slaveAddrMask;
00001e  4834              LDR      r0,|L15.240|
000020  6a40              LDR      r0,[r0,#0x24]
000022  24fe              MOVS     r4,#0xfe
000024  43a0              BICS     r0,r0,r4
000026  0054              LSLS     r4,r2,#1
000028  25fe              MOVS     r5,#0xfe
00002a  402c              ANDS     r4,r4,r5
00002c  4320              ORRS     r0,r0,r4
00002e  4c30              LDR      r4,|L15.240|
000030  6260              STR      r0,[r4,#0x24]
;;;614                    break;
000032  e022              B        |L15.122|
                  |L15.52|
;;;615                case 1:
;;;616                    I2C1->I2CADM1.I2CADM = slaveAddrMask;
000034  482e              LDR      r0,|L15.240|
000036  6a80              LDR      r0,[r0,#0x28]
000038  24fe              MOVS     r4,#0xfe
00003a  43a0              BICS     r0,r0,r4
00003c  0054              LSLS     r4,r2,#1
00003e  25fe              MOVS     r5,#0xfe
000040  402c              ANDS     r4,r4,r5
000042  4320              ORRS     r0,r0,r4
000044  4c2a              LDR      r4,|L15.240|
000046  62a0              STR      r0,[r4,#0x28]
;;;617                    break;
000048  e017              B        |L15.122|
                  |L15.74|
;;;618                case 2:
;;;619                    I2C1->I2CADM2.I2CADM = slaveAddrMask;
00004a  4829              LDR      r0,|L15.240|
00004c  6ac0              LDR      r0,[r0,#0x2c]
00004e  24fe              MOVS     r4,#0xfe
000050  43a0              BICS     r0,r0,r4
000052  0054              LSLS     r4,r2,#1
000054  25fe              MOVS     r5,#0xfe
000056  402c              ANDS     r4,r4,r5
000058  4320              ORRS     r0,r0,r4
00005a  4c25              LDR      r4,|L15.240|
00005c  62e0              STR      r0,[r4,#0x2c]
;;;620                    break;
00005e  e00c              B        |L15.122|
                  |L15.96|
;;;621                case 3:
;;;622                    I2C1->I2CADM3.I2CADM = slaveAddrMask;
000060  4823              LDR      r0,|L15.240|
000062  6b00              LDR      r0,[r0,#0x30]
000064  24fe              MOVS     r4,#0xfe
000066  43a0              BICS     r0,r0,r4
000068  0054              LSLS     r4,r2,#1
00006a  25fe              MOVS     r5,#0xfe
00006c  402c              ANDS     r4,r4,r5
00006e  4320              ORRS     r0,r0,r4
000070  4c1f              LDR      r4,|L15.240|
000072  6320              STR      r0,[r4,#0x30]
;;;623                    break;
000074  e001              B        |L15.122|
                  |L15.118|
;;;624                default:
;;;625                    return E_DRVI2C_ERR_ARGUMENT;
000076  481f              LDR      r0,|L15.244|
                  |L15.120|
;;;626            }
;;;627        }
;;;628        else
;;;629        {
;;;630            switch (slaveNo)
;;;631            {
;;;632                case 0:
;;;633                    I2C0->I2CADM0.I2CADM = slaveAddrMask;
;;;634                    break;
;;;635                case 1:
;;;636                    I2C0->I2CADM1.I2CADM = slaveAddrMask;
;;;637                    break;
;;;638                case 2:
;;;639                    I2C0->I2CADM2.I2CADM = slaveAddrMask;
;;;640                    break;
;;;641                case 3:
;;;642                    I2C0->I2CADM3.I2CADM = slaveAddrMask;
;;;643                    break;
;;;644                default:
;;;645                    return E_DRVI2C_ERR_ARGUMENT;
;;;646            }   
;;;647        }
;;;648        return 0;
;;;649    }
000078  bd30              POP      {r4,r5,pc}
                  |L15.122|
00007a  e037              B        |L15.236|
                  |L15.124|
00007c  2900              CMP      r1,#0                 ;630
00007e  d006              BEQ      |L15.142|
000080  2901              CMP      r1,#1                 ;630
000082  d00f              BEQ      |L15.164|
000084  2902              CMP      r1,#2                 ;630
000086  d018              BEQ      |L15.186|
000088  2903              CMP      r1,#3                 ;630
00008a  d12c              BNE      |L15.230|
00008c  e020              B        |L15.208|
                  |L15.142|
00008e  481a              LDR      r0,|L15.248|
000090  6a40              LDR      r0,[r0,#0x24]         ;633
000092  24fe              MOVS     r4,#0xfe              ;633
000094  43a0              BICS     r0,r0,r4              ;633
000096  0054              LSLS     r4,r2,#1              ;633
000098  25fe              MOVS     r5,#0xfe              ;633
00009a  402c              ANDS     r4,r4,r5              ;633
00009c  4320              ORRS     r0,r0,r4              ;633
00009e  4c16              LDR      r4,|L15.248|
0000a0  6260              STR      r0,[r4,#0x24]         ;633
0000a2  e022              B        |L15.234|
                  |L15.164|
0000a4  4814              LDR      r0,|L15.248|
0000a6  6a80              LDR      r0,[r0,#0x28]         ;636
0000a8  24fe              MOVS     r4,#0xfe              ;636
0000aa  43a0              BICS     r0,r0,r4              ;636
0000ac  0054              LSLS     r4,r2,#1              ;636
0000ae  25fe              MOVS     r5,#0xfe              ;636
0000b0  402c              ANDS     r4,r4,r5              ;636
0000b2  4320              ORRS     r0,r0,r4              ;636
0000b4  4c10              LDR      r4,|L15.248|
0000b6  62a0              STR      r0,[r4,#0x28]         ;636
0000b8  e017              B        |L15.234|
                  |L15.186|
0000ba  480f              LDR      r0,|L15.248|
0000bc  6ac0              LDR      r0,[r0,#0x2c]         ;639
0000be  24fe              MOVS     r4,#0xfe              ;639
0000c0  43a0              BICS     r0,r0,r4              ;639
0000c2  0054              LSLS     r4,r2,#1              ;639
0000c4  25fe              MOVS     r5,#0xfe              ;639
0000c6  402c              ANDS     r4,r4,r5              ;639
0000c8  4320              ORRS     r0,r0,r4              ;639
0000ca  4c0b              LDR      r4,|L15.248|
0000cc  62e0              STR      r0,[r4,#0x2c]         ;639
0000ce  e00c              B        |L15.234|
                  |L15.208|
0000d0  4809              LDR      r0,|L15.248|
0000d2  6b00              LDR      r0,[r0,#0x30]         ;642
0000d4  24fe              MOVS     r4,#0xfe              ;642
0000d6  43a0              BICS     r0,r0,r4              ;642
0000d8  0054              LSLS     r4,r2,#1              ;642
0000da  25fe              MOVS     r5,#0xfe              ;642
0000dc  402c              ANDS     r4,r4,r5              ;642
0000de  4320              ORRS     r0,r0,r4              ;642
0000e0  4c05              LDR      r4,|L15.248|
0000e2  6320              STR      r0,[r4,#0x30]         ;642
0000e4  e001              B        |L15.234|
                  |L15.230|
0000e6  4803              LDR      r0,|L15.244|
0000e8  e7c6              B        |L15.120|
                  |L15.234|
0000ea  bf00              NOP                            ;634
                  |L15.236|
0000ec  2000              MOVS     r0,#0                 ;648
0000ee  e7c3              B        |L15.120|
;;;650    
                          ENDP

                  |L15.240|
                          DCD      0x40120000
                  |L15.244|
                          DCD      0xffff8b01
                  |L15.248|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_SetClockFreq||, CODE, READONLY, ALIGN=2

                  DrvI2C_SetClockFreq PROC
;;;398    /*---------------------------------------------------------------------------------------------------------*/
;;;399    int32_t DrvI2C_SetClockFreq(E_I2C_PORT port, uint32_t u32BusClock)
000000  b5f8              PUSH     {r3-r7,lr}
;;;400    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;401        uint32_t divider;     
;;;402     
;;;403        divider = (uint32_t) (((SystemCoreClock*10)/(u32BusClock * 4) + 5) / 10 - 1);
000006  00b1              LSLS     r1,r6,#2
000008  4a0c              LDR      r2,|L16.60|
00000a  6812              LDR      r2,[r2,#0]  ; SystemCoreClock
00000c  230a              MOVS     r3,#0xa
00000e  435a              MULS     r2,r3,r2
000010  4610              MOV      r0,r2
000012  f7fffffe          BL       __aeabi_uidivmod
000016  1d47              ADDS     r7,r0,#5
000018  210a              MOVS     r1,#0xa
00001a  4638              MOV      r0,r7
00001c  f7fffffe          BL       __aeabi_uidivmod
000020  1e44              SUBS     r4,r0,#1
;;;404    
;;;405        if (divider < 4)
000022  2c04              CMP      r4,#4
000024  d200              BCS      |L16.40|
;;;406        {
;;;407            divider = 4;
000026  2404              MOVS     r4,#4
                  |L16.40|
;;;408        }
;;;409    
;;;410        if (port)
000028  2d00              CMP      r5,#0
00002a  d002              BEQ      |L16.50|
;;;411        {
;;;412            I2C1->I2CLK = divider;
00002c  4804              LDR      r0,|L16.64|
00002e  6104              STR      r4,[r0,#0x10]
000030  e001              B        |L16.54|
                  |L16.50|
;;;413        }
;;;414        else
;;;415        {
;;;416            I2C0->I2CLK = divider;
000032  4804              LDR      r0,|L16.68|
000034  6104              STR      r4,[r0,#0x10]
                  |L16.54|
;;;417        }
;;;418        return 0;
000036  2000              MOVS     r0,#0
;;;419    }
000038  bdf8              POP      {r3-r7,pc}
;;;420    
                          ENDP

00003a  0000              DCW      0x0000
                  |L16.60|
                          DCD      SystemCoreClock
                  |L16.64|
                          DCD      0x40120000
                  |L16.68|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_SetTimeoutCounter||, CODE, READONLY, ALIGN=2

                  DrvI2C_SetTimeoutCounter PROC
;;;508    /*---------------------------------------------------------------------------------------------------------*/
;;;509    int32_t DrvI2C_SetTimeoutCounter(E_I2C_PORT port, int32_t i32enable, uint8_t u8div4)
000000  b530              PUSH     {r4,r5,lr}
;;;510    {
000002  4603              MOV      r3,r0
;;;511        if (port)
000004  2b00              CMP      r3,#0
000006  d014              BEQ      |L17.50|
;;;512        {
;;;513            I2C1->I2CTOC.DIV4 = u8div4;
000008  4815              LDR      r0,|L17.96|
00000a  6940              LDR      r0,[r0,#0x14]
00000c  2402              MOVS     r4,#2
00000e  43a0              BICS     r0,r0,r4
000010  0054              LSLS     r4,r2,#1
000012  2502              MOVS     r5,#2
000014  402c              ANDS     r4,r4,r5
000016  4320              ORRS     r0,r0,r4
000018  4c11              LDR      r4,|L17.96|
00001a  6160              STR      r0,[r4,#0x14]
;;;514            I2C1->I2CTOC.ENTI = i32enable;
00001c  4620              MOV      r0,r4
00001e  6940              LDR      r0,[r0,#0x14]
000020  2404              MOVS     r4,#4
000022  43a0              BICS     r0,r0,r4
000024  008c              LSLS     r4,r1,#2
000026  2504              MOVS     r5,#4
000028  402c              ANDS     r4,r4,r5
00002a  4320              ORRS     r0,r0,r4
00002c  4c0c              LDR      r4,|L17.96|
00002e  6160              STR      r0,[r4,#0x14]
000030  e013              B        |L17.90|
                  |L17.50|
;;;515        }
;;;516        else
;;;517        {
;;;518            I2C0->I2CTOC.DIV4 = u8div4;
000032  480c              LDR      r0,|L17.100|
000034  6940              LDR      r0,[r0,#0x14]
000036  2402              MOVS     r4,#2
000038  43a0              BICS     r0,r0,r4
00003a  0054              LSLS     r4,r2,#1
00003c  2502              MOVS     r5,#2
00003e  402c              ANDS     r4,r4,r5
000040  4320              ORRS     r0,r0,r4
000042  4c08              LDR      r4,|L17.100|
000044  6160              STR      r0,[r4,#0x14]
;;;519            I2C0->I2CTOC.ENTI = i32enable;
000046  4620              MOV      r0,r4
000048  6940              LDR      r0,[r0,#0x14]
00004a  2404              MOVS     r4,#4
00004c  43a0              BICS     r0,r0,r4
00004e  008c              LSLS     r4,r1,#2
000050  2504              MOVS     r5,#4
000052  402c              ANDS     r4,r4,r5
000054  4320              ORRS     r0,r0,r4
000056  4c03              LDR      r4,|L17.100|
000058  6160              STR      r0,[r4,#0x14]
                  |L17.90|
;;;520        }
;;;521        return 0;
00005a  2000              MOVS     r0,#0
;;;522    }
00005c  bd30              POP      {r4,r5,pc}
;;;523    
                          ENDP

00005e  0000              DCW      0x0000
                  |L17.96|
                          DCD      0x40120000
                  |L17.100|
                          DCD      0x40020000

                          AREA ||i.DrvI2C_UninstallCallBack||, CODE, READONLY, ALIGN=2

                  DrvI2C_UninstallCallBack PROC
;;;742    /*---------------------------------------------------------------------------------------------------------*/
;;;743    int32_t DrvI2C_UninstallCallBack(E_I2C_PORT port, E_I2C_CALLBACK_TYPE Type)
000000  4602              MOV      r2,r0
;;;744    {
;;;745        if (port == I2C_PORT0)
000002  2a00              CMP      r2,#0
000004  d11b              BNE      |L18.62|
;;;746        { 
;;;747            switch(Type)
000006  2900              CMP      r1,#0
000008  d006              BEQ      |L18.24|
00000a  2901              CMP      r1,#1
00000c  d008              BEQ      |L18.32|
00000e  2902              CMP      r1,#2
000010  d00a              BEQ      |L18.40|
000012  2903              CMP      r1,#3
000014  d110              BNE      |L18.56|
000016  e00b              B        |L18.48|
                  |L18.24|
;;;748            {
;;;749                case I2CFUNC:
;;;750                {
;;;751                    I2CHandler0.I2CCallBackFn = 0;  
000018  2000              MOVS     r0,#0
00001a  4b19              LDR      r3,|L18.128|
00001c  6018              STR      r0,[r3,#0]  ; I2CHandler0
;;;752                    break;
00001e  e00d              B        |L18.60|
                  |L18.32|
;;;753                }
;;;754                case ARBITLOSS:
;;;755                {
;;;756                    I2CHandler0.ArbitLossCallBackFn = 0;  
000020  2000              MOVS     r0,#0
000022  4b17              LDR      r3,|L18.128|
000024  6058              STR      r0,[r3,#4]  ; I2CHandler0
;;;757                    break;
000026  e009              B        |L18.60|
                  |L18.40|
;;;758                }
;;;759                case BUSERROR:
;;;760                {
;;;761                    I2CHandler0.BusErrCallBackFn = 0;  
000028  2000              MOVS     r0,#0
00002a  4b15              LDR      r3,|L18.128|
00002c  6098              STR      r0,[r3,#8]  ; I2CHandler0
;;;762                    break;
00002e  e005              B        |L18.60|
                  |L18.48|
;;;763                }        
;;;764                case TIMEOUT:
;;;765                {
;;;766                    I2CHandler0.TimeoutCallBackFn = 0;  
000030  2000              MOVS     r0,#0
000032  4b13              LDR      r3,|L18.128|
000034  60d8              STR      r0,[r3,#0xc]  ; I2CHandler0
;;;767                    break;
000036  e001              B        |L18.60|
                  |L18.56|
;;;768                }
;;;769                default:
;;;770                    return E_DRVI2C_ERR_ARGUMENT;   
000038  4812              LDR      r0,|L18.132|
                  |L18.58|
;;;771            }  
;;;772        }
;;;773        else if (port == I2C_PORT1)
;;;774        { 
;;;775            switch(Type)
;;;776            {
;;;777                case I2CFUNC:
;;;778                {
;;;779                    I2CHandler1.I2CCallBackFn = 0;  
;;;780                    break;
;;;781                }
;;;782                case ARBITLOSS:
;;;783                {
;;;784                    I2CHandler1.ArbitLossCallBackFn = 0;  
;;;785                    break;
;;;786                }
;;;787                case BUSERROR:
;;;788                {
;;;789                    I2CHandler1.BusErrCallBackFn = 0;  
;;;790                    break;
;;;791                }        
;;;792                case TIMEOUT:
;;;793                {
;;;794                    I2CHandler1.TimeoutCallBackFn = 0;  
;;;795                    break;
;;;796                }
;;;797                default:
;;;798                    return E_DRVI2C_ERR_ARGUMENT;   
;;;799            }   
;;;800        }       
;;;801        return 0;
;;;802    }
00003a  4770              BX       lr
                  |L18.60|
00003c  e01d              B        |L18.122|
                  |L18.62|
00003e  2a01              CMP      r2,#1                 ;773
000040  d11b              BNE      |L18.122|
000042  2900              CMP      r1,#0                 ;775
000044  d006              BEQ      |L18.84|
000046  2901              CMP      r1,#1                 ;775
000048  d008              BEQ      |L18.92|
00004a  2902              CMP      r1,#2                 ;775
00004c  d00a              BEQ      |L18.100|
00004e  2903              CMP      r1,#3                 ;775
000050  d110              BNE      |L18.116|
000052  e00b              B        |L18.108|
                  |L18.84|
000054  2000              MOVS     r0,#0                 ;779
000056  4b0c              LDR      r3,|L18.136|
000058  6018              STR      r0,[r3,#0]            ;779  ; I2CHandler1
00005a  e00d              B        |L18.120|
                  |L18.92|
00005c  2000              MOVS     r0,#0                 ;784
00005e  4b0a              LDR      r3,|L18.136|
000060  6058              STR      r0,[r3,#4]            ;784  ; I2CHandler1
000062  e009              B        |L18.120|
                  |L18.100|
000064  2000              MOVS     r0,#0                 ;789
000066  4b08              LDR      r3,|L18.136|
000068  6098              STR      r0,[r3,#8]            ;789  ; I2CHandler1
00006a  e005              B        |L18.120|
                  |L18.108|
00006c  2000              MOVS     r0,#0                 ;794
00006e  4b06              LDR      r3,|L18.136|
000070  60d8              STR      r0,[r3,#0xc]          ;794  ; I2CHandler1
000072  e001              B        |L18.120|
                  |L18.116|
000074  4803              LDR      r0,|L18.132|
000076  e7e0              B        |L18.58|
                  |L18.120|
000078  bf00              NOP                            ;780
                  |L18.122|
00007a  2000              MOVS     r0,#0                 ;801
00007c  e7dd              B        |L18.58|
;;;803    
                          ENDP

00007e  0000              DCW      0x0000
                  |L18.128|
                          DCD      I2CHandler0
                  |L18.132|
                          DCD      0xffff8b01
                  |L18.136|
                          DCD      I2CHandler1

                          AREA ||i.DrvI2C_WriteData||, CODE, READONLY, ALIGN=2

                  DrvI2C_WriteData PROC
;;;183    /*---------------------------------------------------------------------------------------------------------*/
;;;184    void DrvI2C_WriteData(E_I2C_PORT port, uint8_t u8data)
000000  2800              CMP      r0,#0
;;;185    {
;;;186        if (port)
000002  d002              BEQ      |L19.10|
;;;187        {
;;;188            I2C1->I2CDAT = u8data;
000004  4a02              LDR      r2,|L19.16|
000006  6091              STR      r1,[r2,#8]
000008  e001              B        |L19.14|
                  |L19.10|
;;;189        }   
;;;190        else
;;;191        {
;;;192            I2C0->I2CDAT = u8data;    
00000a  4a02              LDR      r2,|L19.20|
00000c  6091              STR      r1,[r2,#8]
                  |L19.14|
;;;193        }
;;;194    }
00000e  4770              BX       lr
;;;195    
                          ENDP

                  |L19.16|
                          DCD      0x40120000
                  |L19.20|
                          DCD      0x40020000

                          AREA ||i.I2C0_IRQHandler||, CODE, READONLY, ALIGN=2

                  I2C0_IRQHandler PROC
;;;45     /*---------------------------------------------------------------------------------------------------------*/
;;;46     void I2C0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;47     {
;;;48         uint32_t status;
;;;49     
;;;50         status  = I2C0->I2CSTATUS;
000002  481c              LDR      r0,|L20.116|
000004  68c4              LDR      r4,[r0,#0xc]
;;;51     
;;;52         if (I2C0->I2CTOC.TIF)
000006  6940              LDR      r0,[r0,#0x14]
000008  07c0              LSLS     r0,r0,#31
00000a  0fc0              LSRS     r0,r0,#31
00000c  2800              CMP      r0,#0
00000e  d00f              BEQ      |L20.48|
;;;53         {
;;;54             I2C0->I2CTOC.TIF = 1;  /* Clear TIF */
000010  4818              LDR      r0,|L20.116|
000012  6940              LDR      r0,[r0,#0x14]
000014  0840              LSRS     r0,r0,#1
000016  0040              LSLS     r0,r0,#1
000018  1c40              ADDS     r0,r0,#1
00001a  4916              LDR      r1,|L20.116|
00001c  6148              STR      r0,[r1,#0x14]
;;;55             
;;;56             if (I2CHandler0.TimeoutCallBackFn)
00001e  4816              LDR      r0,|L20.120|
000020  68c0              LDR      r0,[r0,#0xc]  ; I2CHandler0
000022  2800              CMP      r0,#0
000024  d024              BEQ      |L20.112|
;;;57             {
;;;58                 I2CHandler0.TimeoutCallBackFn(status); 
000026  4814              LDR      r0,|L20.120|
000028  68c1              LDR      r1,[r0,#0xc]  ; I2CHandler0
00002a  4620              MOV      r0,r4
00002c  4788              BLX      r1
00002e  e01f              B        |L20.112|
                  |L20.48|
;;;59             }
;;;60         }
;;;61         else
;;;62         {
;;;63             switch (status)
000030  2c00              CMP      r4,#0
000032  d00a              BEQ      |L20.74|
000034  2c38              CMP      r4,#0x38
000036  d111              BNE      |L20.92|
;;;64             {   
;;;65                 case 0x38:  /* Arbitration loss */
;;;66                 {
;;;67                     if (I2CHandler0.ArbitLossCallBackFn)
000038  480f              LDR      r0,|L20.120|
00003a  6840              LDR      r0,[r0,#4]  ; I2CHandler0
00003c  2800              CMP      r0,#0
00003e  d003              BEQ      |L20.72|
;;;68                         I2CHandler0.ArbitLossCallBackFn(status); 
000040  480d              LDR      r0,|L20.120|
000042  6841              LDR      r1,[r0,#4]  ; I2CHandler0
000044  4620              MOV      r0,r4
000046  4788              BLX      r1
                  |L20.72|
;;;69                     break;
000048  e011              B        |L20.110|
                  |L20.74|
;;;70                 }
;;;71                 case 0x00:  /* Bus error */
;;;72                 {
;;;73                     if (I2CHandler0.BusErrCallBackFn)
00004a  480b              LDR      r0,|L20.120|
00004c  6880              LDR      r0,[r0,#8]  ; I2CHandler0
00004e  2800              CMP      r0,#0
000050  d003              BEQ      |L20.90|
;;;74                         I2CHandler0.BusErrCallBackFn(status); 
000052  4809              LDR      r0,|L20.120|
000054  6881              LDR      r1,[r0,#8]  ; I2CHandler0
000056  4620              MOV      r0,r4
000058  4788              BLX      r1
                  |L20.90|
;;;75                     break;
00005a  e008              B        |L20.110|
                  |L20.92|
;;;76                 }
;;;77                 default:
;;;78                 {
;;;79                     if (I2CHandler0.I2CCallBackFn)
00005c  4806              LDR      r0,|L20.120|
00005e  6800              LDR      r0,[r0,#0]  ; I2CHandler0
000060  2800              CMP      r0,#0
000062  d003              BEQ      |L20.108|
;;;80                         I2CHandler0.I2CCallBackFn(status);
000064  4804              LDR      r0,|L20.120|
000066  6801              LDR      r1,[r0,#0]  ; I2CHandler0
000068  4620              MOV      r0,r4
00006a  4788              BLX      r1
                  |L20.108|
00006c  bf00              NOP                            ;63
                  |L20.110|
00006e  bf00              NOP                            ;69
                  |L20.112|
;;;81                 }       
;;;82             }   
;;;83         }
;;;84     }
000070  bd10              POP      {r4,pc}
;;;85     
                          ENDP

000072  0000              DCW      0x0000
                  |L20.116|
                          DCD      0x40020000
                  |L20.120|
                          DCD      I2CHandler0

                          AREA ||i.I2C1_IRQHandler||, CODE, READONLY, ALIGN=2

                  I2C1_IRQHandler PROC
;;;96     /*---------------------------------------------------------------------------------------------------------*/
;;;97     void I2C1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;98     {
;;;99         uint32_t status;
;;;100    
;;;101        status  = I2C1->I2CSTATUS;
000002  481c              LDR      r0,|L21.116|
000004  68c4              LDR      r4,[r0,#0xc]
;;;102    
;;;103        if (I2C1->I2CTOC.TIF)
000006  6940              LDR      r0,[r0,#0x14]
000008  07c0              LSLS     r0,r0,#31
00000a  0fc0              LSRS     r0,r0,#31
00000c  2800              CMP      r0,#0
00000e  d00f              BEQ      |L21.48|
;;;104        {
;;;105            I2C1->I2CTOC.TIF = 1;  /* Clear TIF */
000010  4818              LDR      r0,|L21.116|
000012  6940              LDR      r0,[r0,#0x14]
000014  0840              LSRS     r0,r0,#1
000016  0040              LSLS     r0,r0,#1
000018  1c40              ADDS     r0,r0,#1
00001a  4916              LDR      r1,|L21.116|
00001c  6148              STR      r0,[r1,#0x14]
;;;106            
;;;107            if (I2CHandler1.TimeoutCallBackFn)
00001e  4816              LDR      r0,|L21.120|
000020  68c0              LDR      r0,[r0,#0xc]  ; I2CHandler1
000022  2800              CMP      r0,#0
000024  d024              BEQ      |L21.112|
;;;108            {
;;;109                I2CHandler1.TimeoutCallBackFn(status); 
000026  4814              LDR      r0,|L21.120|
000028  68c1              LDR      r1,[r0,#0xc]  ; I2CHandler1
00002a  4620              MOV      r0,r4
00002c  4788              BLX      r1
00002e  e01f              B        |L21.112|
                  |L21.48|
;;;110            }
;;;111        }
;;;112        else
;;;113        {
;;;114            switch (status)
000030  2c00              CMP      r4,#0
000032  d00a              BEQ      |L21.74|
000034  2c38              CMP      r4,#0x38
000036  d111              BNE      |L21.92|
;;;115            {   
;;;116                case 0x38:  /* Arbitration loss */
;;;117                {
;;;118                    if (I2CHandler1.ArbitLossCallBackFn)
000038  480f              LDR      r0,|L21.120|
00003a  6840              LDR      r0,[r0,#4]  ; I2CHandler1
00003c  2800              CMP      r0,#0
00003e  d003              BEQ      |L21.72|
;;;119                        I2CHandler1.ArbitLossCallBackFn(status); 
000040  480d              LDR      r0,|L21.120|
000042  6841              LDR      r1,[r0,#4]  ; I2CHandler1
000044  4620              MOV      r0,r4
000046  4788              BLX      r1
                  |L21.72|
;;;120                    break;
000048  e011              B        |L21.110|
                  |L21.74|
;;;121                }
;;;122                case 0x00:  /* Bus error */
;;;123                {
;;;124                    if (I2CHandler1.BusErrCallBackFn)
00004a  480b              LDR      r0,|L21.120|
00004c  6880              LDR      r0,[r0,#8]  ; I2CHandler1
00004e  2800              CMP      r0,#0
000050  d003              BEQ      |L21.90|
;;;125                        I2CHandler1.BusErrCallBackFn(status); 
000052  4809              LDR      r0,|L21.120|
000054  6881              LDR      r1,[r0,#8]  ; I2CHandler1
000056  4620              MOV      r0,r4
000058  4788              BLX      r1
                  |L21.90|
;;;126                    break;
00005a  e008              B        |L21.110|
                  |L21.92|
;;;127                }
;;;128                default:
;;;129                {
;;;130                    if (I2CHandler1.I2CCallBackFn)
00005c  4806              LDR      r0,|L21.120|
00005e  6800              LDR      r0,[r0,#0]  ; I2CHandler1
000060  2800              CMP      r0,#0
000062  d003              BEQ      |L21.108|
;;;131                        I2CHandler1.I2CCallBackFn(status);
000064  4804              LDR      r0,|L21.120|
000066  6801              LDR      r1,[r0,#0]  ; I2CHandler1
000068  4620              MOV      r0,r4
00006a  4788              BLX      r1
                  |L21.108|
00006c  bf00              NOP                            ;114
                  |L21.110|
00006e  bf00              NOP                            ;120
                  |L21.112|
;;;132                }       
;;;133            }   
;;;134        }  
;;;135    }
000070  bd10              POP      {r4,pc}
;;;136    
                          ENDP

000072  0000              DCW      0x0000
                  |L21.116|
                          DCD      0x40120000
                  |L21.120|
                          DCD      I2CHandler1

                          AREA ||i.I2C_Read||, CODE, READONLY, ALIGN=2

                  I2C_Read PROC
;;;846    
;;;847    uint8_t I2C_Read(uint8_t INDEX)
000000  b538              PUSH     {r3-r5,lr}
;;;848    {
000002  4605              MOV      r5,r0
;;;849      uint8_t TEMP;
;;;850    	//send i2c start
;;;851      DrvI2C_Ctrl(I2C_PORT_NO,1, 0, 1, 0);	//set start
000004  2000              MOVS     r0,#0
000006  2301              MOVS     r3,#1
000008  4602              MOV      r2,r0
00000a  4619              MOV      r1,r3
00000c  9000              STR      r0,[sp,#0]
00000e  f7fffffe          BL       DrvI2C_Ctrl
;;;852    	while (I2C_FLAG_SI==0);	//poll si flag
000012  bf00              NOP      
                  |L22.20|
000014  4834              LDR      r0,|L22.232|
000016  6800              LDR      r0,[r0,#0]
000018  0700              LSLS     r0,r0,#28
00001a  0fc0              LSRS     r0,r0,#31
00001c  2800              CMP      r0,#0
00001e  d0f9              BEQ      |L22.20|
;;;853    	 
;;;854      //send to Write port
;;;855    	I2C_DATAPORT = I2C_ADDR;
000020  201a              MOVS     r0,#0x1a
000022  4931              LDR      r1,|L22.232|
000024  6088              STR      r0,[r1,#8]
;;;856      DrvI2C_Ctrl(I2C_PORT_NO,0, 0, 1, 0);	//clr si
000026  2000              MOVS     r0,#0
000028  2301              MOVS     r3,#1
00002a  4602              MOV      r2,r0
00002c  4601              MOV      r1,r0
00002e  9000              STR      r0,[sp,#0]
000030  f7fffffe          BL       DrvI2C_Ctrl
;;;857      while(I2C_FLAG_SI==0);  //poll si flag
000034  bf00              NOP      
                  |L22.54|
000036  482c              LDR      r0,|L22.232|
000038  6800              LDR      r0,[r0,#0]
00003a  0700              LSLS     r0,r0,#28
00003c  0fc0              LSRS     r0,r0,#31
00003e  2800              CMP      r0,#0
000040  d0f9              BEQ      |L22.54|
;;;858    
;;;859    	//send INDEX
;;;860    	I2C_DATAPORT = INDEX;
000042  4829              LDR      r0,|L22.232|
000044  6085              STR      r5,[r0,#8]
;;;861      DrvI2C_Ctrl(I2C_PORT_NO,0, 0, 1, 0);	//clr si
000046  2000              MOVS     r0,#0
000048  2301              MOVS     r3,#1
00004a  4602              MOV      r2,r0
00004c  4601              MOV      r1,r0
00004e  9000              STR      r0,[sp,#0]
000050  f7fffffe          BL       DrvI2C_Ctrl
;;;862      while(I2C_FLAG_SI==0);	//poll si flag
000054  bf00              NOP      
                  |L22.86|
000056  4824              LDR      r0,|L22.232|
000058  6800              LDR      r0,[r0,#0]
00005a  0700              LSLS     r0,r0,#28
00005c  0fc0              LSRS     r0,r0,#31
00005e  2800              CMP      r0,#0
000060  d0f9              BEQ      |L22.86|
;;;863    
;;;864    	//send i2c start
;;;865      DrvI2C_Ctrl(I2C_PORT_NO,1, 0, 1, 0);	//set start
000062  2000              MOVS     r0,#0
000064  2301              MOVS     r3,#1
000066  4602              MOV      r2,r0
000068  4619              MOV      r1,r3
00006a  9000              STR      r0,[sp,#0]
00006c  f7fffffe          BL       DrvI2C_Ctrl
;;;866    	while (I2C_FLAG_SI==0);	//poll si flag
000070  bf00              NOP      
                  |L22.114|
000072  481d              LDR      r0,|L22.232|
000074  6800              LDR      r0,[r0,#0]
000076  0700              LSLS     r0,r0,#28
000078  0fc0              LSRS     r0,r0,#31
00007a  2800              CMP      r0,#0
00007c  d0f9              BEQ      |L22.114|
;;;867    
;;;868     	//send to Read port
;;;869    	I2C_DATAPORT = (I2C_ADDR+1);
00007e  201b              MOVS     r0,#0x1b
000080  4919              LDR      r1,|L22.232|
000082  6088              STR      r0,[r1,#8]
;;;870      DrvI2C_Ctrl(I2C_PORT_NO,0, 0, 1, 0);	//clr si
000084  2000              MOVS     r0,#0
000086  2301              MOVS     r3,#1
000088  4602              MOV      r2,r0
00008a  4601              MOV      r1,r0
00008c  9000              STR      r0,[sp,#0]
00008e  f7fffffe          BL       DrvI2C_Ctrl
;;;871      while(I2C_FLAG_SI==0);	//poll si flag
000092  bf00              NOP      
                  |L22.148|
000094  4814              LDR      r0,|L22.232|
000096  6800              LDR      r0,[r0,#0]
000098  0700              LSLS     r0,r0,#28
00009a  0fc0              LSRS     r0,r0,#31
00009c  2800              CMP      r0,#0
00009e  d0f9              BEQ      |L22.148|
;;;872    		
;;;873    	//receive data
;;;874    	I2C_DATAPORT = 0xFF;
0000a0  20ff              MOVS     r0,#0xff
0000a2  4911              LDR      r1,|L22.232|
0000a4  6088              STR      r0,[r1,#8]
;;;875    	DrvI2C_Ctrl(I2C_PORT_NO,0, 0, 1, 0);   //clr si	
0000a6  2000              MOVS     r0,#0
0000a8  2301              MOVS     r3,#1
0000aa  4602              MOV      r2,r0
0000ac  4601              MOV      r1,r0
0000ae  9000              STR      r0,[sp,#0]
0000b0  f7fffffe          BL       DrvI2C_Ctrl
;;;876    	while(I2C_FLAG_SI==0);	//poll si flag
0000b4  bf00              NOP      
                  |L22.182|
0000b6  480c              LDR      r0,|L22.232|
0000b8  6800              LDR      r0,[r0,#0]
0000ba  0700              LSLS     r0,r0,#28
0000bc  0fc0              LSRS     r0,r0,#31
0000be  2800              CMP      r0,#0
0000c0  d0f9              BEQ      |L22.182|
;;;877    	TEMP = I2C_DATAPORT;
0000c2  4809              LDR      r0,|L22.232|
0000c4  6880              LDR      r0,[r0,#8]
0000c6  b2c4              UXTB     r4,r0
;;;878    
;;;879    	//send i2c stop
;;;880     	DrvI2C_Ctrl(I2C_PORT_NO,0, 1, 1, 0);   //clr si and set stop
0000c8  2000              MOVS     r0,#0
0000ca  2301              MOVS     r3,#1
0000cc  461a              MOV      r2,r3
0000ce  4601              MOV      r1,r0
0000d0  9000              STR      r0,[sp,#0]
0000d2  f7fffffe          BL       DrvI2C_Ctrl
;;;881    	while(I2C_FLAG_STO);
0000d6  bf00              NOP      
                  |L22.216|
0000d8  4803              LDR      r0,|L22.232|
0000da  6800              LDR      r0,[r0,#0]
0000dc  06c0              LSLS     r0,r0,#27
0000de  0fc0              LSRS     r0,r0,#31
0000e0  2800              CMP      r0,#0
0000e2  d1f9              BNE      |L22.216|
;;;882    
;;;883    	return TEMP;
0000e4  4620              MOV      r0,r4
;;;884    }
0000e6  bd38              POP      {r3-r5,pc}
                          ENDP

                  |L22.232|
                          DCD      0x40020000

                          AREA ||i.I2C_Write||, CODE, READONLY, ALIGN=2

                  I2C_Write PROC
;;;820    
;;;821    void I2C_Write(uint8_t INDEX,uint8_t DATA)
000000  b538              PUSH     {r3-r5,lr}
;;;822    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;823      //send i2c start
;;;824    	DrvI2C_Ctrl(I2C_PORT_NO, 1, 0, 1, 0);	//set start
000006  2000              MOVS     r0,#0
000008  2301              MOVS     r3,#1
00000a  4602              MOV      r2,r0
00000c  4619              MOV      r1,r3
00000e  9000              STR      r0,[sp,#0]
000010  f7fffffe          BL       DrvI2C_Ctrl
;;;825    	while (I2C_FLAG_SI==0);	  //poll si flag
000014  bf00              NOP      
                  |L23.22|
000016  4823              LDR      r0,|L23.164|
000018  6800              LDR      r0,[r0,#0]
00001a  0700              LSLS     r0,r0,#28
00001c  0fc0              LSRS     r0,r0,#31
00001e  2800              CMP      r0,#0
000020  d0f9              BEQ      |L23.22|
;;;826    
;;;827    	//send to Write port
;;;828    	I2C_DATAPORT = I2C_ADDR;
000022  201a              MOVS     r0,#0x1a
000024  491f              LDR      r1,|L23.164|
000026  6088              STR      r0,[r1,#8]
;;;829      DrvI2C_Ctrl(I2C_PORT_NO, 0, 0, 1, 0);   //clr si flag
000028  2000              MOVS     r0,#0
00002a  2301              MOVS     r3,#1
00002c  4602              MOV      r2,r0
00002e  4601              MOV      r1,r0
000030  9000              STR      r0,[sp,#0]
000032  f7fffffe          BL       DrvI2C_Ctrl
;;;830      while(I2C_FLAG_SI==0);	//poll si flag
000036  bf00              NOP      
                  |L23.56|
000038  481a              LDR      r0,|L23.164|
00003a  6800              LDR      r0,[r0,#0]
00003c  0700              LSLS     r0,r0,#28
00003e  0fc0              LSRS     r0,r0,#31
000040  2800              CMP      r0,#0
000042  d0f9              BEQ      |L23.56|
;;;831    
;;;832    	//send write address
;;;833    	I2C_DATAPORT = INDEX;	
000044  4817              LDR      r0,|L23.164|
000046  6085              STR      r5,[r0,#8]
;;;834    	DrvI2C_Ctrl(I2C_PORT_NO,0, 0, 1, 0);   //clr si 	
000048  2000              MOVS     r0,#0
00004a  2301              MOVS     r3,#1
00004c  4602              MOV      r2,r0
00004e  4601              MOV      r1,r0
000050  9000              STR      r0,[sp,#0]
000052  f7fffffe          BL       DrvI2C_Ctrl
;;;835    	while(I2C_FLAG_SI==0);	//poll si flag
000056  bf00              NOP      
                  |L23.88|
000058  4812              LDR      r0,|L23.164|
00005a  6800              LDR      r0,[r0,#0]
00005c  0700              LSLS     r0,r0,#28
00005e  0fc0              LSRS     r0,r0,#31
000060  2800              CMP      r0,#0
000062  d0f9              BEQ      |L23.88|
;;;836    
;;;837    	//send write data
;;;838    	I2C_DATAPORT = DATA;	
000064  480f              LDR      r0,|L23.164|
000066  6084              STR      r4,[r0,#8]
;;;839    	DrvI2C_Ctrl(I2C_PORT_NO,0, 0, 1, 0);   //clr si 	
000068  2000              MOVS     r0,#0
00006a  2301              MOVS     r3,#1
00006c  4602              MOV      r2,r0
00006e  4601              MOV      r1,r0
000070  9000              STR      r0,[sp,#0]
000072  f7fffffe          BL       DrvI2C_Ctrl
;;;840    	while(I2C_FLAG_SI==0);	//poll si flag
000076  bf00              NOP      
                  |L23.120|
000078  480a              LDR      r0,|L23.164|
00007a  6800              LDR      r0,[r0,#0]
00007c  0700              LSLS     r0,r0,#28
00007e  0fc0              LSRS     r0,r0,#31
000080  2800              CMP      r0,#0
000082  d0f9              BEQ      |L23.120|
;;;841    
;;;842      //send i2c stop
;;;843    	DrvI2C_Ctrl(I2C_PORT_NO,0, 1, 1, 0);   //send stop	
000084  2000              MOVS     r0,#0
000086  2301              MOVS     r3,#1
000088  461a              MOV      r2,r3
00008a  4601              MOV      r1,r0
00008c  9000              STR      r0,[sp,#0]
00008e  f7fffffe          BL       DrvI2C_Ctrl
;;;844    	while(I2C_FLAG_STO); 	
000092  bf00              NOP      
                  |L23.148|
000094  4803              LDR      r0,|L23.164|
000096  6800              LDR      r0,[r0,#0]
000098  06c0              LSLS     r0,r0,#27
00009a  0fc0              LSRS     r0,r0,#31
00009c  2800              CMP      r0,#0
00009e  d1f9              BNE      |L23.148|
;;;845    }
0000a0  bd38              POP      {r3-r5,pc}
;;;846    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L23.164|
                          DCD      0x40020000

                          AREA ||i.NVIC_DisableIRQ||, CODE, READONLY, ALIGN=2

                  NVIC_DisableIRQ PROC
;;;809     */
;;;810    static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
000000  06c2              LSLS     r2,r0,#27
;;;811    {
;;;812      NVIC->ICER[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
000002  0ed2              LSRS     r2,r2,#27
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  4a01              LDR      r2,|L24.16|
00000a  6011              STR      r1,[r2,#0]
;;;813    }
00000c  4770              BX       lr
;;;814    
                          ENDP

00000e  0000              DCW      0x0000
                  |L24.16|
                          DCD      0xe000e180

                          AREA ||i.NVIC_EnableIRQ||, CODE, READONLY, ALIGN=2

                  NVIC_EnableIRQ PROC
;;;796     */
;;;797    static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
000000  06c2              LSLS     r2,r0,#27
;;;798    {
;;;799      NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
000002  0ed2              LSRS     r2,r2,#27
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  4a01              LDR      r2,|L25.16|
00000a  6011              STR      r1,[r2,#0]
;;;800    }
00000c  4770              BX       lr
;;;801    
                          ENDP

00000e  0000              DCW      0x0000
                  |L25.16|
                          DCD      0xe000e100

                          AREA ||i.NVIC_SetPriority||, CODE, READONLY, ALIGN=2

                  NVIC_SetPriority PROC
;;;866     */
;;;867    static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
000000  b510              PUSH     {r4,lr}
;;;868    {
;;;869      if(IRQn < 0) {
000002  2800              CMP      r0,#0
000004  da19              BGE      |L26.58|
;;;870        SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) | 
000006  4a1a              LDR      r2,|L26.112|
000008  0703              LSLS     r3,r0,#28
00000a  0f1b              LSRS     r3,r3,#28
00000c  3b08              SUBS     r3,r3,#8
00000e  089b              LSRS     r3,r3,#2
000010  009b              LSLS     r3,r3,#2
000012  58d2              LDR      r2,[r2,r3]
000014  0783              LSLS     r3,r0,#30
000016  0edc              LSRS     r4,r3,#27
000018  23ff              MOVS     r3,#0xff
00001a  40a3              LSLS     r3,r3,r4
00001c  439a              BICS     r2,r2,r3
00001e  078b              LSLS     r3,r1,#30
000020  0e1b              LSRS     r3,r3,#24
000022  0784              LSLS     r4,r0,#30
000024  0ee4              LSRS     r4,r4,#27
000026  40a3              LSLS     r3,r3,r4
000028  431a              ORRS     r2,r2,r3
00002a  4b11              LDR      r3,|L26.112|
00002c  0704              LSLS     r4,r0,#28
00002e  0f24              LSRS     r4,r4,#28
000030  3c08              SUBS     r4,r4,#8
000032  08a4              LSRS     r4,r4,#2
000034  00a4              LSLS     r4,r4,#2
000036  511a              STR      r2,[r3,r4]
000038  e018              B        |L26.108|
                  |L26.58|
;;;871            (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
;;;872      else {
;;;873        NVIC->IPR[_IP_IDX(IRQn)] = (NVIC->IPR[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
00003a  4a0e              LDR      r2,|L26.116|
00003c  2303              MOVS     r3,#3
00003e  021b              LSLS     r3,r3,#8
000040  18d2              ADDS     r2,r2,r3
000042  0883              LSRS     r3,r0,#2
000044  009b              LSLS     r3,r3,#2
000046  58d2              LDR      r2,[r2,r3]
000048  0783              LSLS     r3,r0,#30
00004a  0edc              LSRS     r4,r3,#27
00004c  23ff              MOVS     r3,#0xff
00004e  40a3              LSLS     r3,r3,r4
000050  439a              BICS     r2,r2,r3
000052  078b              LSLS     r3,r1,#30
000054  0e1b              LSRS     r3,r3,#24
000056  0784              LSLS     r4,r0,#30
000058  0ee4              LSRS     r4,r4,#27
00005a  40a3              LSLS     r3,r3,r4
00005c  431a              ORRS     r2,r2,r3
00005e  4b05              LDR      r3,|L26.116|
000060  2403              MOVS     r4,#3
000062  0224              LSLS     r4,r4,#8
000064  191b              ADDS     r3,r3,r4
000066  0884              LSRS     r4,r0,#2
000068  00a4              LSLS     r4,r4,#2
00006a  511a              STR      r2,[r3,r4]
                  |L26.108|
;;;874            (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
;;;875    }
00006c  bd10              POP      {r4,pc}
;;;876    
                          ENDP

00006e  0000              DCW      0x0000
                  |L26.112|
                          DCD      0xe000ed1c
                  |L26.116|
                          DCD      0xe000e100

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  I2CHandler0
                          %        16
                  I2CHandler1
                          %        16
