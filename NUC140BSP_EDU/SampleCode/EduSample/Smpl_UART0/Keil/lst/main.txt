; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\main.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\ -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\Device\Nuvoton\NUC1xx\Include -I..\..\..\..\Library\Device\Nuvoton\NUC1xx\Source -I..\..\..\..\Library\ -I..\..\..\..\Library\NUC1xx\Include -I..\..\..\..\Library\NUC1xx-LB_002\Include -IF:\Keil\ARM\RV31\INC -IF:\Keil\ARM\CMSIS\Include -IF:\Keil\ARM\INC\Nuvoton\NUC1xx -D__UVISION_VERSION=524 --omf_browse=.\obj\main.crf ..\main.c]
                          THUMB

                          AREA ||i.UART_INT_HANDLE||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  UART_INT_HANDLE PROC
;;;27     /*---------------------------------------------------------------------------------------------------------*/
;;;28     void UART_INT_HANDLE(void)
000000  b508              PUSH     {r3,lr}
;;;29     {
;;;30     	uint8_t bInChar[1] = {0xFF};
000002  a018              ADR      r0,|L1.100|
000004  6800              LDR      r0,[r0,#0]
000006  9000              STR      r0,[sp,#0]
;;;31     
;;;32     	while(UART0->ISR.RDA_IF==1) 
000008  e025              B        |L1.86|
                  |L1.10|
;;;33     	{
;;;34     		DrvUART_Read(UART_PORT0,bInChar,1);	
00000a  2201              MOVS     r2,#1
00000c  4669              MOV      r1,sp
00000e  2000              MOVS     r0,#0
000010  f7fffffe          BL       DrvUART_Read
;;;35     		if(comRbytes < 8) // check if Buffer is full
000014  4814              LDR      r0,|L1.104|
000016  8800              LDRH     r0,[r0,#0]  ; comRbytes
000018  2808              CMP      r0,#8
00001a  da0b              BGE      |L1.52|
;;;36     		{
;;;37     			comRbuf[comRbytes] = bInChar[0];
00001c  4668              MOV      r0,sp
00001e  7800              LDRB     r0,[r0,#0]
000020  4912              LDR      r1,|L1.108|
000022  4a11              LDR      r2,|L1.104|
000024  8812              LDRH     r2,[r2,#0]  ; comRbytes
000026  5488              STRB     r0,[r1,r2]
;;;38     			comRbytes++;
000028  480f              LDR      r0,|L1.104|
00002a  8800              LDRH     r0,[r0,#0]  ; comRbytes
00002c  1c40              ADDS     r0,r0,#1
00002e  490e              LDR      r1,|L1.104|
000030  8008              STRH     r0,[r1,#0]
000032  e010              B        |L1.86|
                  |L1.52|
;;;39     		}
;;;40     		else if (comRbytes==8)
000034  480c              LDR      r0,|L1.104|
000036  8800              LDRH     r0,[r0,#0]  ; comRbytes
000038  2808              CMP      r0,#8
00003a  d10c              BNE      |L1.86|
;;;41     		{
;;;42     			comRbytes=0;
00003c  2000              MOVS     r0,#0
00003e  490a              LDR      r1,|L1.104|
000040  8008              STRH     r0,[r1,#0]
;;;43     			sprintf(TEXT2+4,"%s",comRbuf);
000042  4a0a              LDR      r2,|L1.108|
000044  a10a              ADR      r1,|L1.112|
000046  480b              LDR      r0,|L1.116|
000048  f7fffffe          BL       __2sprintf
;;;44     			print_Line(2,TEXT2);
00004c  4909              LDR      r1,|L1.116|
00004e  1f09              SUBS     r1,r1,#4
000050  2002              MOVS     r0,#2
000052  f7fffffe          BL       print_Line
                  |L1.86|
000056  4808              LDR      r0,|L1.120|
000058  69c0              LDR      r0,[r0,#0x1c]         ;32
00005a  07c0              LSLS     r0,r0,#31             ;32
00005c  0fc0              LSRS     r0,r0,#31             ;32
00005e  2800              CMP      r0,#0                 ;32
000060  d1d3              BNE      |L1.10|
;;;45     		}			
;;;46     	}
;;;47     }
000062  bd08              POP      {r3,pc}
;;;48     
                          ENDP

                  |L1.100|
000064  ff00              DCB      255,0
000066  00                DCB      0
000067  00                DCB      0
                  |L1.104|
                          DCD      comRbytes
                  |L1.108|
                          DCD      comRbuf
                  |L1.112|
000070  257300            DCB      "%s",0
000073  00                DCB      0
                  |L1.116|
                          DCD      TEXT2+0x4
                  |L1.120|
                          DCD      0x40050000

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  main PROC
;;;48     
;;;49     int32_t main()
000000  b086              SUB      sp,sp,#0x18
;;;50     {
;;;51     	uint8_t  i =0;
000002  2400              MOVS     r4,#0
;;;52     	uint8_t  dataout[9] = "NuMicro0";
000004  a225              ADR      r2,|L2.156|
000006  ca07              LDM      r2,{r0-r2}
000008  ab03              ADD      r3,sp,#0xc
00000a  c307              STM      r3!,{r0-r2}
;;;53     
;;;54     	STR_UART_T sParam;
;;;55     
;;;56     	UNLOCKREG();
00000c  2059              MOVS     r0,#0x59
00000e  4926              LDR      r1,|L2.168|
000010  6008              STR      r0,[r1,#0]
000012  2016              MOVS     r0,#0x16
000014  6008              STR      r0,[r1,#0]
000016  2088              MOVS     r0,#0x88
000018  6008              STR      r0,[r1,#0]
;;;57       DrvSYS_Open(50000000);
00001a  4824              LDR      r0,|L2.172|
00001c  f7fffffe          BL       DrvSYS_Open
;;;58     	LOCKREG();
000020  2000              MOVS     r0,#0
000022  4921              LDR      r1,|L2.168|
000024  6008              STR      r0,[r1,#0]
;;;59     	
;;;60     	init_LCD();
000026  f7fffffe          BL       init_LCD
;;;61     	clear_LCD();
00002a  f7fffffe          BL       clear_LCD
;;;62     	print_Line(0,"Smpl_UART0    ");
00002e  a120              ADR      r1,|L2.176|
000030  2000              MOVS     r0,#0
000032  f7fffffe          BL       print_Line
;;;63        	
;;;64     	/* Set UART Pin */
;;;65     	DrvGPIO_InitFunction(E_FUNC_UART0);		
000036  2029              MOVS     r0,#0x29
000038  f7fffffe          BL       DrvGPIO_InitFunction
;;;66     
;;;67     	/* UART Setting */
;;;68         sParam.u32BaudRate 		= 9600;
00003c  204b              MOVS     r0,#0x4b
00003e  01c0              LSLS     r0,r0,#7
000040  9000              STR      r0,[sp,#0]
;;;69         sParam.u8cDataBits 		= DRVUART_DATABITS_8;
000042  2103              MOVS     r1,#3
000044  4668              MOV      r0,sp
000046  7101              STRB     r1,[r0,#4]
;;;70         sParam.u8cStopBits 		= DRVUART_STOPBITS_1;
000048  2100              MOVS     r1,#0
00004a  7141              STRB     r1,[r0,#5]
;;;71         sParam.u8cParity 		= DRVUART_PARITY_NONE;
00004c  7181              STRB     r1,[r0,#6]
;;;72         sParam.u8cRxTriggerLevel= DRVUART_FIFO_1BYTES;
00004e  71c1              STRB     r1,[r0,#7]
;;;73     
;;;74     	/* Set UART Configuration */
;;;75      	if(DrvUART_Open(UART_PORT0,&sParam) != E_SUCCESS);  
000050  4669              MOV      r1,sp
000052  2000              MOVS     r0,#0
000054  f7fffffe          BL       DrvUART_Open
;;;76     
;;;77     	DrvUART_EnableInt(UART_PORT0, DRVUART_RDAINT, UART_INT_HANDLE);  
000058  4a19              LDR      r2,|L2.192|
00005a  2101              MOVS     r1,#1
00005c  2000              MOVS     r0,#0
00005e  f7fffffe          BL       DrvUART_EnableInt
;;;78     	
;;;79     	while(1)
000062  e01a              B        |L2.154|
                  |L2.100|
;;;80     	{
;;;81      	  dataout[7] = 0x30 +i;	
000064  4620              MOV      r0,r4
000066  3030              ADDS     r0,r0,#0x30
000068  4669              MOV      r1,sp
00006a  74c8              STRB     r0,[r1,#0x13]
;;;82     		DrvUART_Write(UART_PORT0, dataout,8);
00006c  2208              MOVS     r2,#8
00006e  a903              ADD      r1,sp,#0xc
000070  2000              MOVS     r0,#0
000072  f7fffffe          BL       DrvUART_Write
;;;83     		i++;
000076  1c60              ADDS     r0,r4,#1
000078  b2c4              UXTB     r4,r0
;;;84     		if (i>=10) i = 0;
00007a  2c0a              CMP      r4,#0xa
00007c  db00              BLT      |L2.128|
00007e  2400              MOVS     r4,#0
                  |L2.128|
;;;85     		sprintf(TEXT1+14,"%d",i);
000080  4622              MOV      r2,r4
000082  a110              ADR      r1,|L2.196|
000084  4810              LDR      r0,|L2.200|
000086  f7fffffe          BL       __2sprintf
;;;86     		print_Line(1,TEXT1);
00008a  490f              LDR      r1,|L2.200|
00008c  390e              SUBS     r1,r1,#0xe
00008e  2001              MOVS     r0,#1
000090  f7fffffe          BL       print_Line
;;;87     		DrvSYS_Delay(5000000);
000094  480d              LDR      r0,|L2.204|
000096  f7fffffe          BL       DrvSYS_Delay
                  |L2.154|
00009a  e7e3              B        |L2.100|
;;;88     	}
;;;89     	//DrvUART_Close(UART_PORT0);
;;;90     }
;;;91     
                          ENDP

                  |L2.156|
00009c  4e754d69          DCB      "NuMicro0",0
0000a0  63726f30
0000a4  00      
0000a5  00                DCB      0
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L2.168|
                          DCD      0x50000100
                  |L2.172|
                          DCD      0x02faf080
                  |L2.176|
0000b0  536d706c          DCB      "Smpl_UART0    ",0
0000b4  5f554152
0000b8  54302020
0000bc  202000  
0000bf  00                DCB      0
                  |L2.192|
                          DCD      UART_INT_HANDLE
                  |L2.196|
0000c4  256400            DCB      "%d",0
0000c7  00                DCB      0
                  |L2.200|
                          DCD      TEXT1+0xe
                  |L2.204|
                          DCD      0x004c4b40

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  comRbuf
                          %        16

                          AREA ||.data||, DATA, ALIGN=1

                  comRbytes
000000  0000              DCW      0x0000
                  comRhead
000002  0000              DCW      0x0000
                  comRtail
000004  0000              DCW      0x0000
                  TEXT1
000006  5458              DCB      0x54,0x58
000008  3a207365          DCB      0x3a,0x20,0x73,0x65
00000c  6e64696e          DCB      0x6e,0x64,0x69,0x6e
000010  672e2e2e          DCB      0x67,0x2e,0x2e,0x2e
000014  2020              DCB      0x20,0x20
                  TEXT2
000016  5258              DCB      0x52,0x58
000018  3a202020          DCB      0x3a,0x20,0x20,0x20
00001c  20202020          DCB      0x20,0x20,0x20,0x20
000020  20202020          DCB      0x20,0x20,0x20,0x20
000024  2020              DCB      0x20,0x20

                  __ARM_use_no_argv EQU 0
